/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.faisal.tm;

import com.istlbd.gui.ContainerJFrame;
import business.entity.BioPerson;
import com.faisal.tm.CSD550E.CSD200Library;
import com.faisal.tm.data.FPData;
import com.faisal.tm.geom.FPSegment;
import client.bean.ApplicationData;
import com.istlbd.gui.ApplicationNidPanel;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.istlbd.utils.Defs;
import com.istlbd.utils.Lookup;
import com.sun.jna.ptr.IntByReference;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Properties;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import wsq.wrapper.WSQConverter;

/**
 *
 * @author User
 */
public class FingerPrintForm extends javax.swing.JFrame implements WindowListener, ISegmentFingerprint, ICaptureObserver, IComputeQualityScore {

//    static {
//        Native.setProtected(true);
//    }
    
//    private static Properties properties;
//    private static boolean isValidProperties = false;
//    private static boolean isPathChanged = false;
//    private static HashMap<String, String> propertiesMap;
//    private static ArrayList<BioPerson> tabledata;
//    private static ArrayList<String> servers;
//    private static DefaultTableModel historyTableModel = null;
//    private static JPanel login_panel;
//    private static String Existing_backup_path;
//    private static FileNameExtensionFilter filter;
//    private HashMap<String, byte[]> fingersMap;
//    private HashMap<String, byte[]> photoMap;
//    private static boolean isFpDeviceInitialized = false;
//    private static boolean isFpDeviceConnected = true;
//    public static boolean isAutoCapture = false;
//    public int current_selected_index = 0;
//    private int fWidth;
//    private int fHeight;
//    private String identifyOrVerify;
//    public static String fingerQualityImage = "blue";
//    private JFileChooser fingerPrintFileChooser;
//    public static int initCrossMatchReturnCode;
//    public static int crossmatchReadyForCapture;
////3M STARTS    
//    private static FingerPrintForm fpView = null;
//    private static MyCanvas mCanvas = null;
//    private CSD200Library csdLibrary = null;
//    private CSD200Library.ICG4_CallbackPreviewImage previewImageCallback = null;
//    private CSD200Library.ICG4_CallbackResultImage resultImageCallback = null;
//    private FPData leftFPData = null;
//    private FPData rightFPData = null;
//    private FPData thumbFPData = null;
//    private int fingerCnt = 0;
//    private int whichFinger = 0;
//    private boolean BATCH_FINGER_MODE = true;
//
//// 3M ENDS
//    public HashMap<String, byte[]> getFingersMap() {
//        return fingersMap;
//    }
//
//    public void setFingersMap(HashMap<String, byte[]> fingersMap) {
//        this.fingersMap = fingersMap;
//    }
//
//    public FingerPrintForm() {
////        applicationData = new ApplicationData();
//        initComponents();
//
//        //3M STARTS
//        mCanvas = new MyCanvas();
//        mCanvas.setBounds(new Rectangle(2, 2, previewPanel.getWidth() - 4, previewPanel.getHeight() - 4));
//        previewPanel.add(mCanvas);
//
//        leftFPData = new FPData();
//        rightFPData = new FPData();
//        thumbFPData = new FPData();
//        //3M ENDS
//
//
//        /*
//         WindowListener exitListener = new WindowAdapter() {
//         @Override
//         public void windowClosing(WindowEvent e) {
//         idv_finger_print_panelComponentHidden();
//         }};        
//         this.addWindowListener(exitListener); 
//         */
//
//
//        idv_finger_print_panelComponentShown();
//        
//        this.addWindowListener(this);
//    }
//
//    public void setFrameTitle(String title) {
//        this.setTitle(title);
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_content_panel = new javax.swing.JPanel();
        idv_finger_print_panel1 = new javax.swing.JPanel();
        idv_lm_cap1 = new javax.swing.JLabel();
        leftFourFingerLabel = new javax.swing.JLabel();
        rightFourFingerLabel = new javax.swing.JLabel();
        twoThumbsLabel = new javax.swing.JLabel();
        idv_lr_cap1 = new javax.swing.JLabel();
        idv_lp_cap1 = new javax.swing.JLabel();
        idv_lt_cap1 = new javax.swing.JLabel();
        idv_li_cap1 = new javax.swing.JLabel();
        left_hand_base_label1 = new javax.swing.JLabel();
        idv_ri_pointer1 = new javax.swing.JLabel();
        idv_rt_cap1 = new javax.swing.JLabel();
        idv_rr_cap1 = new javax.swing.JLabel();
        idv_rp_cap1 = new javax.swing.JLabel();
        idv_ri_cap1 = new javax.swing.JLabel();
        idv_rm_cap1 = new javax.swing.JLabel();
        right_hand_base_label1 = new javax.swing.JLabel();
        idv_lt_preview_label1 = new javax.swing.JLabel();
        idv_lp_preview_label1 = new javax.swing.JLabel();
        idv_lr_preview_label1 = new javax.swing.JLabel();
        idv_lm_preview_label1 = new javax.swing.JLabel();
        idv_li_preview_label1 = new javax.swing.JLabel();
        idv_rt_preview_label1 = new javax.swing.JLabel();
        idv_rp_preview_label1 = new javax.swing.JLabel();
        idv_rr_preview_label1 = new javax.swing.JLabel();
        idv_rm_preview_label1 = new javax.swing.JLabel();
        idv_ri_preview_label1 = new javax.swing.JLabel();
        idv_rt_pointer1 = new javax.swing.JLabel();
        idv_rm_pointer1 = new javax.swing.JLabel();
        idv_rr_pointer1 = new javax.swing.JLabel();
        idv_rp_pointer1 = new javax.swing.JLabel();
        idv_lt_pointer1 = new javax.swing.JLabel();
        idv_li_pointer1 = new javax.swing.JLabel();
        idv_lm_pointer1 = new javax.swing.JLabel();
        idv_lr_pointer1 = new javax.swing.JLabel();
        idv_lp_pointer1 = new javax.swing.JLabel();
        idv_capture_complete_button1 = new javax.swing.JButton();
        idv_capture_cancel_button1 = new javax.swing.JButton();
        idv_capture_reset_button1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        fpCanvas1 = new java.awt.Canvas();
        idv_ri_pointer = new javax.swing.JLabel();
        idv_rt_pointer = new javax.swing.JLabel();
        idv_li_pointer = new javax.swing.JLabel();
        idv_lt_pointer = new javax.swing.JLabel();
        fpCanvas = new java.awt.Canvas();
        previewPanel = new javax.swing.JPanel();
        status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        main_content_panel.setMaximumSize(new java.awt.Dimension(874, 450));
        main_content_panel.setMinimumSize(new java.awt.Dimension(874, 450));
        main_content_panel.setPreferredSize(new java.awt.Dimension(874, 450));

        idv_finger_print_panel1.setMaximumSize(new java.awt.Dimension(850, 422));
        idv_finger_print_panel1.setMinimumSize(new java.awt.Dimension(850, 422));
        idv_finger_print_panel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                idv_finger_print_panel1ComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                idv_finger_print_panel1ComponentShown(evt);
            }
        });
        idv_finger_print_panel1.setLayout(null);

        idv_lm_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lm_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/l_middle_blue.gif"))); // NOI18N
        idv_lm_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_lm_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_lm_cap1);
        idv_lm_cap1.setBounds(120, 40, 30, 70);

        leftFourFingerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/left_four.png"))); // NOI18N
        leftFourFingerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftFourFingerLabelMouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(leftFourFingerLabel);
        leftFourFingerLabel.setBounds(-20, 200, 70, 70);

        rightFourFingerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/right_four.png"))); // NOI18N
        rightFourFingerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightFourFingerLabelMouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(rightFourFingerLabel);
        rightFourFingerLabel.setBounds(790, 200, 70, 70);

        twoThumbsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/thumbs2.png"))); // NOI18N
        twoThumbsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twoThumbsLabelMouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(twoThumbsLabel);
        twoThumbsLabel.setBounds(360, 300, 130, 70);

        idv_lr_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lr_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/l_ring_blue.gif"))); // NOI18N
        idv_lr_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_lr_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_lr_cap1);
        idv_lr_cap1.setBounds(89, 50, 30, 70);

        idv_lp_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lp_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/l_small_blue.gif"))); // NOI18N
        idv_lp_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_lp_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_lp_cap1);
        idv_lp_cap1.setBounds(56, 66, 30, 70);

        idv_lt_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lt_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/l_thumb_blue.gif"))); // NOI18N
        idv_lt_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_lt_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_lt_cap1);
        idv_lt_cap1.setBounds(181, 140, 40, 60);

        idv_li_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_li_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/l_index_blue.gif"))); // NOI18N
        idv_li_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_li_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_li_cap1);
        idv_li_cap1.setBounds(149, 56, 30, 70);

        left_hand_base_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        left_hand_base_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/left_hand.gif"))); // NOI18N
        left_hand_base_label1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idv_finger_print_panel1.add(left_hand_base_label1);
        left_hand_base_label1.setBounds(50, 20, 180, 250);

        idv_ri_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_ri_pointer1);
        idv_ri_pointer1.setBounds(675, 25, 20, 30);

        idv_rt_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rt_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/r_thumb_blue.gif"))); // NOI18N
        idv_rt_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_rt_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_rt_cap1);
        idv_rt_cap1.setBounds(630, 141, 40, 60);

        idv_rr_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rr_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/r_ring_blue.gif"))); // NOI18N
        idv_rr_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_rr_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_rr_cap1);
        idv_rr_cap1.setBounds(731, 42, 30, 80);

        idv_rp_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rp_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/r_small_blue.gif"))); // NOI18N
        idv_rp_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_rp_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_rp_cap1);
        idv_rp_cap1.setBounds(764, 64, 30, 80);

        idv_ri_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_ri_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/r_index_blue.gif"))); // NOI18N
        idv_ri_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_ri_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_ri_cap1);
        idv_ri_cap1.setBounds(671, 51, 30, 80);

        idv_rm_cap1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rm_cap1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/r_middle_blue.gif"))); // NOI18N
        idv_rm_cap1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idv_rm_cap1MouseClicked(evt);
            }
        });
        idv_finger_print_panel1.add(idv_rm_cap1);
        idv_rm_cap1.setBounds(701, 37, 30, 80);

        right_hand_base_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        right_hand_base_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/right_hand.gif"))); // NOI18N
        right_hand_base_label1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        idv_finger_print_panel1.add(right_hand_base_label1);
        right_hand_base_label1.setBounds(620, 20, 180, 250);

        idv_lt_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_lt_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lt_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_lt_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_lt_preview_label1);
        idv_lt_preview_label1.setBounds(290, 300, 60, 60);

        idv_lp_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_lp_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lp_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_lp_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_lp_preview_label1);
        idv_lp_preview_label1.setBounds(10, 300, 60, 60);

        idv_lr_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_lr_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lr_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_lr_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_lr_preview_label1);
        idv_lr_preview_label1.setBounds(80, 300, 60, 60);

        idv_lm_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_lm_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_lm_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_lm_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_lm_preview_label1);
        idv_lm_preview_label1.setBounds(150, 300, 60, 60);

        idv_li_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_li_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_li_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_li_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_li_preview_label1);
        idv_li_preview_label1.setBounds(220, 300, 60, 60);

        idv_rt_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_rt_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rt_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_rt_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_rt_preview_label1);
        idv_rt_preview_label1.setBounds(500, 300, 60, 60);

        idv_rp_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_rp_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rp_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_rp_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_rp_preview_label1);
        idv_rp_preview_label1.setBounds(780, 300, 60, 60);

        idv_rr_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_rr_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rr_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_rr_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_rr_preview_label1);
        idv_rr_preview_label1.setBounds(710, 300, 60, 60);

        idv_rm_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_rm_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_rm_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_rm_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_rm_preview_label1);
        idv_rm_preview_label1.setBounds(640, 300, 60, 60);

        idv_ri_preview_label1.setBackground(new java.awt.Color(255, 255, 255));
        idv_ri_preview_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_ri_preview_label1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        idv_ri_preview_label1.setOpaque(true);
        idv_finger_print_panel1.add(idv_ri_preview_label1);
        idv_ri_preview_label1.setBounds(570, 300, 60, 60);

        idv_rt_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_rt_pointer1);
        idv_rt_pointer1.setBounds(630, 105, 20, 30);

        idv_rm_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_rm_pointer1);
        idv_rm_pointer1.setBounds(705, 8, 20, 30);

        idv_rr_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_rr_pointer1);
        idv_rr_pointer1.setBounds(733, 18, 20, 30);

        idv_rp_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_rp_pointer1);
        idv_rp_pointer1.setBounds(768, 45, 20, 30);

        idv_lt_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_lt_pointer1);
        idv_lt_pointer1.setBounds(200, 105, 20, 30);

        idv_li_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_li_pointer1);
        idv_li_pointer1.setBounds(155, 23, 20, 30);

        idv_lm_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_lm_pointer1);
        idv_lm_pointer1.setBounds(123, 8, 20, 30);

        idv_lr_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_lr_pointer1);
        idv_lr_pointer1.setBounds(95, 18, 20, 30);

        idv_lp_pointer1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_lp_pointer1);
        idv_lp_pointer1.setBounds(60, 45, 20, 30);

        idv_capture_complete_button1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idv_capture_complete_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/go_next_22.png"))); // NOI18N
        idv_capture_complete_button1.setText("DONE");
        idv_capture_complete_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idv_capture_complete_button1ActionPerformed(evt);
            }
        });
        idv_finger_print_panel1.add(idv_capture_complete_button1);
        idv_capture_complete_button1.setBounds(740, 390, 100, 30);

        idv_capture_cancel_button1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idv_capture_cancel_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/cancel_16.png"))); // NOI18N
        idv_capture_cancel_button1.setText("CANCEL");
        idv_capture_cancel_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idv_capture_cancel_button1ActionPerformed(evt);
            }
        });
        idv_finger_print_panel1.add(idv_capture_cancel_button1);
        idv_capture_cancel_button1.setBounds(620, 390, 100, 30);

        idv_capture_reset_button1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        idv_capture_reset_button1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/restart_18.png"))); // NOI18N
        idv_capture_reset_button1.setText("RESET");
        idv_capture_reset_button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idv_capture_reset_button1ActionPerformed(evt);
            }
        });
        idv_finger_print_panel1.add(idv_capture_reset_button1);
        idv_capture_reset_button1.setBounds(500, 390, 100, 30);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/green-tick.png"))); // NOI18N
        idv_finger_print_panel1.add(jLabel19);
        jLabel19.setBounds(140, 390, 20, 20);

        jLabel20.setText("  Good");
        idv_finger_print_panel1.add(jLabel20);
        jLabel20.setBounds(170, 390, 40, 20);

        jLabel21.setText("  Fair");
        idv_finger_print_panel1.add(jLabel21);
        jLabel21.setBounds(250, 390, 30, 20);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/orange-tick.png"))); // NOI18N
        idv_finger_print_panel1.add(jLabel22);
        jLabel22.setBounds(220, 390, 20, 20);

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/red-minus.png"))); // NOI18N
        idv_finger_print_panel1.add(jLabel23);
        jLabel23.setBounds(290, 390, 20, 20);

        jLabel24.setText("  Bad");
        idv_finger_print_panel1.add(jLabel24);
        jLabel24.setBounds(320, 390, 30, 20);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Fingerprint Quality : ");
        idv_finger_print_panel1.add(jLabel25);
        jLabel25.setBounds(16, 390, 114, 20);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("INDEX");
        idv_finger_print_panel1.add(jLabel26);
        jLabel26.setBounds(220, 365, 60, 20);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("THUMB");
        idv_finger_print_panel1.add(jLabel27);
        jLabel27.setBounds(500, 365, 60, 20);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("INDEX");
        idv_finger_print_panel1.add(jLabel28);
        jLabel28.setBounds(570, 365, 60, 20);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("THUMB");
        idv_finger_print_panel1.add(jLabel29);
        jLabel29.setBounds(290, 365, 60, 20);

        fpCanvas1.setVisible(false);
        idv_finger_print_panel1.add(fpCanvas1);
        fpCanvas1.setBounds(410, 310, 30, 30);

        idv_ri_pointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_ri_pointer);
        idv_ri_pointer.setBounds(675, 25, 20, 30);

        idv_rt_pointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_rt_pointer);
        idv_rt_pointer.setBounds(630, 105, 20, 30);

        idv_li_pointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_li_pointer);
        idv_li_pointer.setBounds(155, 23, 20, 30);

        idv_lt_pointer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idv_finger_print_panel1.add(idv_lt_pointer);
        idv_lt_pointer.setBounds(200, 105, 20, 30);

        fpCanvas.setVisible(false);
        idv_finger_print_panel1.add(fpCanvas);
        fpCanvas.setBounds(410, 310, 30, 30);

        previewPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout previewPanelLayout = new javax.swing.GroupLayout(previewPanel);
        previewPanel.setLayout(previewPanelLayout);
        previewPanelLayout.setHorizontalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        previewPanelLayout.setVerticalGroup(
            previewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 280, Short.MAX_VALUE)
        );

        idv_finger_print_panel1.add(previewPanel);
        previewPanel.setBounds(230, 10, 390, 280);

        javax.swing.GroupLayout main_content_panelLayout = new javax.swing.GroupLayout(main_content_panel);
        main_content_panel.setLayout(main_content_panelLayout);
        main_content_panelLayout.setHorizontalGroup(
            main_content_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_content_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idv_finger_print_panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 859, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        main_content_panelLayout.setVerticalGroup(
            main_content_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_content_panelLayout.createSequentialGroup()
                .addComponent(idv_finger_print_panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(main_content_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(main_content_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //3M STARTS 
    // INTERFACE ISegmentFingerPrint Starts
//    @Override
//    public FPData getFPData() {
//        int wf = this.getWhichFinger();
//        switch (wf) {
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS:
//                return leftFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_FINGERS:
//                return rightFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_TWO_THUMBS:
//                return thumbFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_SMALL:
//                return leftFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_RING:
//                return leftFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_MIDDLE:
//                return leftFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_INDEX:
//                return leftFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_THUMB:
//                return thumbFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_SMALL:
//                return rightFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_RING:
//                return rightFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_MIDDLE:
//                return rightFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_INDEX:
//                return rightFPData;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_THUMB:
//                return thumbFPData;
//            default:
//                return leftFPData;
//        }
//    }
//
//    @Override
//    public int getFingerCnt() {
//        return fingerCnt;
//    }
//
//    @Override
//    public void setFPData(FPData fpData) {
//        int wf = this.getWhichFinger();
//        switch (wf) {
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS:
//                this.leftFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_FINGERS:
//                this.rightFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_TWO_THUMBS:
//                this.thumbFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_SMALL:
//                this.leftFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_RING:
//                this.leftFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_MIDDLE:
//                this.leftFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_INDEX:
//                this.leftFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_THUMB:
//                this.thumbFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_SMALL:
//                this.rightFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_RING:
//                this.rightFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_MIDDLE:
//                this.rightFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_INDEX:
//                this.rightFPData = fpData;
//                break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_THUMB:
//                this.thumbFPData = fpData;
//                break;
//            default:
//                this.leftFPData = fpData;
//        }
//    }
//
//    @Override
//    public void segmentationDone() {
//        int wf = this.whichFinger;
//
//        switch (wf) {
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS: {
//                this.setLeftFingerIcons();
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_FINGERS: {
//                this.setRightFingerIcons();
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_TWO_THUMBS: {
//                this.setThumbFingerIcons();
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_SMALL: {
//                this.setLabelIcon(idv_lp_preview_label1, this.leftFPData.getSegment(0));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_RING: {
//                this.setLabelIcon(idv_lr_preview_label1, this.leftFPData.getSegment(1));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_MIDDLE: {
//                this.setLabelIcon(idv_lm_preview_label1, this.leftFPData.getSegment(2));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_INDEX: {
//                this.setLabelIcon(idv_li_preview_label1, this.leftFPData.getSegment(3));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_THUMB: {
//                this.setLabelIcon(idv_lt_preview_label1, this.thumbFPData.getSegment(0));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_SMALL: {
//                this.setLabelIcon(idv_rp_preview_label1, this.rightFPData.getSegment(3));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_RING: {
//                this.setLabelIcon(idv_rr_preview_label1, this.rightFPData.getSegment(2));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_MIDDLE: {
//                this.setLabelIcon(idv_rm_preview_label1, this.rightFPData.getSegment(1));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_INDEX: {
//                this.setLabelIcon(idv_ri_preview_label1, this.rightFPData.getSegment(0));
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_THUMB: {
//                this.setLabelIcon(idv_rt_preview_label1, this.thumbFPData.getSegment(1));
//            }
//            break;
//            default:
//                this.setLeftFingerIcons();
//        }
//
//        updateLabel("Finger Print Quality Calculating. Please wait...");
//        ComputeQualityScore qualityScore = new ComputeQualityScore(this);
//        qualityScore.start();
//    }
//
//    @Override
//    public void segmentationFailed(String errMsg) {
//        JOptionPane.showMessageDialog(null, "Segmentation Failed : " + errMsg, "Segmentation Message", JOptionPane.OK_OPTION);
//    }
//
//    @Override
//    public int getWhichFinger() {
//        return whichFinger;
//    }
//    // INTERFACE ISEGMENTFINGERPRINT ENDS
//
//// INTERFACE ICAPTUREOBSERVER STARTS
//    @Override
//    public void setFPImagePreview(Image img) {
//        mCanvas.setFpImg(img);
//        mCanvas.repaint();
//    }
//
//    @Override
//    public void setFPImageFinal(Image img) {
//        mCanvas.setFpImg(img);
//        mCanvas.repaint();
//    }
//
//    @Override
//    public void setCaptureDone() {
//        updateLabel("Segmenting fingerprints. Please wait...");
//        csdLibrary.CG4_Controls_SetLEDs(CSD200Library.CG4LedType.CG4_LED_EXTEND, 0);
//        SegmentFingerprint segFinger = new SegmentFingerprint(this);
//        segFinger.start();
//
//    }
//
//    @Override
//    public Image getFPImage() {
//        return mCanvas.getFpImg();
//    }
//
//// INTERFACE ICAPTURE OBSERVER ENDS    
//// INTERFACE ICOMPUTEQUALITYSCORE STARTS
//    @Override
//    public void qualityComputeDone() {
//        updateLabel("Finger Print Capture Completed.");
//
//        int wf = this.getWhichFinger();
//        FPData fpd = null;
//        int scr = 100;
//        int MIN_SCORE = 200;
//        int width,height;
//        switch (wf) {
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS: {
//                fpd = leftFPData;
//
//
////Left Little 0                
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLl(getWsqFromRaw(fpd.getSegment(0)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lp,fpd.getSegment(0));
//                }
//
//// Left Ring 1
//
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLr(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lr,fpd.getSegment(1));                    
//                }
//
//// Left Middle 2
//                scr = fpd.getSegment(2).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(2) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLm(getWsqFromRaw(fpd.getSegment(2)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lm,fpd.getSegment(2));
//                }
//// Left Index 3                
//                scr = fpd.getSegment(3).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(3) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLi(getWsqFromRaw(fpd.getSegment(3)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_li,fpd.getSegment(3));
//                }
//
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_FINGERS: {
//                fpd = rightFPData;
//
//                scr = fpd.getSegment(3).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(3) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRl(getWsqFromRaw(fpd.getSegment(3)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rp,fpd.getSegment(3));
//                }
//
//                scr = fpd.getSegment(2).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(2) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRr(getWsqFromRaw(fpd.getSegment(2)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rr,fpd.getSegment(2));
//                }
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRm(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rm,fpd.getSegment(1));
//                }
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRi(getWsqFromRaw(fpd.getSegment(0)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_ri,fpd.getSegment(0));
//                }
//
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_TWO_THUMBS: {
//                fpd = thumbFPData;
//
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLt(getWsqFromRaw(fpd.getSegment(0)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lt,fpd.getSegment(0));
//                }
//
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRt(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rt,fpd.getSegment(1));
//                }
//
//
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_SMALL: {
//                fpd = leftFPData;
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLl(getWsqFromRaw(fpd.getSegment(0)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lp,fpd.getSegment(0));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_RING: {
//                fpd = leftFPData;
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLr(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lr,fpd.getSegment(1));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_MIDDLE: {
//                fpd = leftFPData;
//                scr = fpd.getSegment(2).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(2) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLm(getWsqFromRaw(fpd.getSegment(2)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lm,fpd.getSegment(2));
//                }
//
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_INDEX: {
//                fpd = leftFPData;
//                scr = fpd.getSegment(3).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(3) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLi(getWsqFromRaw(fpd.getSegment(3)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_li,fpd.getSegment(3));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_LEFT_THUMB: {
//                fpd = thumbFPData;
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqLt(getWsqFromRaw(fpd.getSegment(0)));
//                    
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_lt,fpd.getSegment(0));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_SMALL: {
//                fpd = rightFPData;
//                scr = fpd.getSegment(3).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(3) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRl(getWsqFromRaw(fpd.getSegment(3)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rp,fpd.getSegment(3));
//                }
//
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_RING: {
//                fpd = rightFPData;
//                scr = fpd.getSegment(2).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(2) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRr(getWsqFromRaw(fpd.getSegment(2)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rr,fpd.getSegment(2));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_MIDDLE: {
//                fpd = rightFPData;
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRm(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rm,fpd.getSegment(1));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_INDEX: {
//                fpd = rightFPData;
//                scr = fpd.getSegment(0).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(0) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRi(getWsqFromRaw(fpd.getSegment(0)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_ri,fpd.getSegment(0));
//                }
//            }
//            break;
//            case CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_THUMB: {
//                fpd = thumbFPData;
//                scr = fpd.getSegment(1).getScore();
//                System.out.println("score obtained =" + scr);
//
//                if (fpd.getSegment(1) != null && scr < MIN_SCORE) {
//                    ApplicationNidPanel.applicationData.setWsqRt(getWsqFromRaw(fpd.getSegment(1)));
//                    this.setLabelIcon(ContainerJFrame.applicationNidPanel1.lbl_fp_rt,fpd.getSegment(1));
//                }
//            }
//            break;
//            default:
//                fpd = null;
//
//
//
//        }
//        startCrossmatchAutoSequenceCapture();
//
//    }
//
//    @Override
//    public void qualityComputeFailed(String errMsg) {
//        JOptionPane.showMessageDialog(null, "Quality Computation Failed : " + errMsg, "QC Message", JOptionPane.OK_OPTION);
//        startCrossmatchAutoSequenceCapture();
//    }
//
//// INTERFACE ICOMPUTEQUALITYSCORE ENDS    
//// INTERFACE WINDOWLISTENER STARTS
//    @Override
//    public void windowOpened(WindowEvent e) {
//        int nRc = -1;
//        isFpDeviceConnected = false;
//        try {
//
//            updateLabel("Initializing Device.");
//
//            csdLibrary = (CSD200Library) LibraryLoader.getLibrary("CG4EssentialsApi", "com.faisal.tm.CSD550E.CSD200Library");
//
//            csdLibrary.CG4_Main_DeInitialize();
//
//            nRc = csdLibrary.CG4_Main_Initialize(502);
//
//
//            if (nRc != CSD200Library.ReturnCodes.CG4_STATUS_OK) {
//                updateLabel("Scanner initialization failed. Error Code: " + nRc);
//            } else {
//
//                updateLabel("Calibrating the fingerprint scanner.....\nPlease do not place finger on scanner");
//
//                csdLibrary.CG4_Controls_SetLEDs(CSD200Library.CG4LedType.CG4_LED_EXTEND, 1);
//
//                nRc = csdLibrary.CG4_Capture_Calibration();
//                if (nRc != CSD200Library.ReturnCodes.CG4_STATUS_OK) {
//                    updateLabel("3M Cogent CSD200 scanner calibration failed. Error Code: " + nRc);
//                }
//
//                csdLibrary.CG4_Controls_SetLEDs(CSD200Library.CG4LedType.CG4_LED_EXTEND, 0);
//
//                previewImageCallback = new CSD200Library.CG4_CallbackPreviewImage(this, csdLibrary);
//                resultImageCallback = new CSD200Library.CG4_CallbackResultImage(this, csdLibrary);
//
//                updateLabel("Scanner initialized");
//                isFpDeviceConnected = true;
//                
//            ApplicationNidPanel.showWsqImageinJLabel(idv_lt_preview_label1, ApplicationNidPanel.applicationData.getWsqLt());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_li_preview_label1, ApplicationNidPanel.applicationData.getWsqLi());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_lm_preview_label1, ApplicationNidPanel.applicationData.getWsqLm());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_lr_preview_label1, ApplicationNidPanel.applicationData.getWsqLr());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_lp_preview_label1, ApplicationNidPanel.applicationData.getWsqLl());
//            
//            ApplicationNidPanel.showWsqImageinJLabel(idv_rt_preview_label1, ApplicationNidPanel.applicationData.getWsqRt());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_ri_preview_label1, ApplicationNidPanel.applicationData.getWsqRi());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_rm_preview_label1, ApplicationNidPanel.applicationData.getWsqRm());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_rr_preview_label1, ApplicationNidPanel.applicationData.getWsqRr());
//            ApplicationNidPanel.showWsqImageinJLabel(idv_rp_preview_label1, ApplicationNidPanel.applicationData.getWsqRl());                
//                
//                
//                
//                
//                startCrossmatchAutoSequenceCapture();
//
//            }
//
//        } catch (Exception exc) {
//            updateLabel("Device initialization error. " + exc.getMessage());
//        }
//    }
//
//    @Override
//    public void windowClosing(WindowEvent e) {
//        try {
//            previewImageCallback = null;
//            resultImageCallback = null;
//
//            if (csdLibrary != null) {
//                csdLibrary.CG4_Main_DeInitialize();
//            }
//        } catch (Exception exc) {
//        }
//    }
//
//    @Override
//    public void windowClosed(WindowEvent e) {
//    }
//
//    @Override
//    public void windowIconified(WindowEvent e) {
//    }
//
//    @Override
//    public void windowDeiconified(WindowEvent e) {
//    }
//
//    @Override
//    public void windowActivated(WindowEvent e) {
//    }
//
//    @Override
//    public void windowDeactivated(WindowEvent e) {
//    }
//
//// INTERFACE WINDOWLISTENER ENDS    
//// REM 3M STARTS
//    private void reset() {
//
//        int nRc = 0;
//
//
//        IntByReference resultWidth = new IntByReference();
//        //// resultWidth.setValue(0);
//
//        IntByReference resultHeight = new IntByReference();
//        ///resultHeight.setValue(0);
//
//        IntByReference baseResolutionX = new IntByReference();
//        ///baseResolutionX.setValue(0);
//
//        IntByReference baseResolutionY = new IntByReference();
//        ///baseResolutionY.setValue(0);
//
//        if (previewImageCallback != null) {
//            nRc = csdLibrary.CG4_Capture_RegisterCallbackPreviewImage(previewImageCallback, (Pointer) null);
//        }
//
//        if (resultImageCallback != null) {
//            nRc = csdLibrary.CG4_Capture_RegisterCallbackResultImage(resultImageCallback, (Pointer) null);
//        }
//
//        int imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS;
//        int numberOfObjects = 4;
//
//        if (this.current_selected_index == 11) {
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_FINGERS;
//            numberOfObjects = 4;
//            this.resetLeftFingerIcons();
//            updateLabel("Please place left fingers on scanner...");
//        } else if (this.current_selected_index == 12) {
//            this.resetRightFingerIcons();
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_FINGERS;
//            numberOfObjects = 4;
//            updateLabel("Please place right fingers on scanner...");
//        } else if (this.current_selected_index == 13) {
//            this.resetThumbFingerIcons();
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_TWO_THUMBS;
//            numberOfObjects = 2;
//            updateLabel("Please place two thumbs on scanner...");
//        } else if (this.current_selected_index == 10) {
//            this.resetLabelIcon(idv_lp_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_SMALL;
//            numberOfObjects = 1;
//            updateLabel("Please place left small finger on scanner...");
//        } else if (this.current_selected_index == 9) {
//            this.resetLabelIcon(idv_lr_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_RING;
//            numberOfObjects = 1;
//            updateLabel("Please place left ring finger on scanner...");
//        } else if (this.current_selected_index == 8) {
//            this.resetLabelIcon(idv_lm_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_MIDDLE;
//            numberOfObjects = 1;
//            updateLabel("Please place left middle finger on scanner...");
//        } else if (this.current_selected_index == 7) {
//            this.resetLabelIcon(idv_li_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_INDEX;
//            numberOfObjects = 1;
//            updateLabel("Please place left index finger on scanner...");
//        } else if (this.current_selected_index == 6) {
//            this.resetLabelIcon(idv_lt_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_LEFT_THUMB;
//            numberOfObjects = 1;
//            updateLabel("Please place left thumb finger on scanner...");
//        } else if (this.current_selected_index == 5) {
//            this.resetLabelIcon(idv_rp_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_SMALL;
//            numberOfObjects = 1;
//            updateLabel("Please place right small finger on scanner...");
//        } else if (this.current_selected_index == 4) {
//            this.resetLabelIcon(idv_rr_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_RING;
//            numberOfObjects = 1;
//            updateLabel("Please place right ring finger on scanner...");
//        } else if (this.current_selected_index == 3) {
//            this.resetLabelIcon(idv_rm_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_MIDDLE;
//            numberOfObjects = 1;
//            updateLabel("Please place right middle finger on scanner...");
//        } else if (this.current_selected_index == 2) {
//            this.resetLabelIcon(idv_ri_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_INDEX;
//            numberOfObjects = 1;
//            updateLabel("Please place right index finger on scanner...");
//        } else if (this.current_selected_index == 1) {
//            this.resetLabelIcon(idv_rt_preview_label1);
//            imageType = CSD200Library.CG4ImageType.CG4_FLAT_RIGHT_THUMB;
//            numberOfObjects = 1;
//            updateLabel("Please place right thumb finger on scanner...");
//        }
//
//        this.setFingerCnt(numberOfObjects);
//        this.setWhichFinger(imageType);
//
//        if (nRc != CSD200Library.ReturnCodes.CG4_STATUS_OK) {
//            updateLabel("1 Capture failed. Error Code: " + nRc);
//        } else {
//            csdLibrary.CG4_Controls_SetLEDs(CSD200Library.CG4LedType.CG4_LED_EXTEND, 1);
//
//            nRc = csdLibrary.CG4_Capture_SetMode(
//                    imageType,
//                    CSD200Library.CG4ImageResolution.CG4_IMAGE_RESOLUTION_500,
//                    (byte) 1,
//                    (byte) 0,
//                    resultWidth,
//                    resultHeight,
//                    baseResolutionX,
//                    baseResolutionY);
//
//            if (nRc != CSD200Library.ReturnCodes.CG4_STATUS_OK) {
//                updateLabel("2 Capture failed. Error Code: " + nRc);
//            } else {
//                nRc = csdLibrary.CG4_Capture_Start(numberOfObjects, (byte) 1);
//                if (nRc != CSD200Library.ReturnCodes.CG4_STATUS_OK) {
//                    csdLibrary.CG4_Capture_Abort();
//                    csdLibrary.CG4_Controls_SetLEDs(CSD200Library.CG4LedType.CG4_LED_EXTEND, 0);
//                    updateLabel("3 Capture failed. Error Code: " + nRc);
//                }/*else
//                 {
//                 SegmentFingerprint seFp = new  SegmentFingerprint(this);
//                 seFp.start();
//                 }*/
//            }
//        }
//    }

//    public void updateLabel(String txt) {
//        status.setText(txt);
//        this.repaint();
//
//    }
//
//    public void resetLabelIcon(JLabel lbl) {
//        try {
//            InputStream is = FPView.class.getResourceAsStream("images.png");
//            BufferedImage bufferedImage = ImageIO.read(is);
//            ImageIcon imageIcon = new ImageIcon(bufferedImage);
//            lbl.setIcon(imageIcon);
//        } catch (Exception exc) {
//            exc.printStackTrace();
//        }
//    }
//
//    public void resetLeftFingerIcons() {
//        this.resetLabelIcon(idv_lp_preview_label1);
//        this.resetLabelIcon(idv_lr_preview_label1);
//        this.resetLabelIcon(idv_lm_preview_label1);
//        this.resetLabelIcon(idv_li_preview_label1);
//    }
//
//    public void resetRightFingerIcons() {
//        this.resetLabelIcon(idv_rp_preview_label1);
//        this.resetLabelIcon(idv_rr_preview_label1);
//        this.resetLabelIcon(idv_rm_preview_label1);
//        this.resetLabelIcon(idv_ri_preview_label1);
//    }
//
//    public void resetThumbFingerIcons() {
//        this.resetLabelIcon(idv_lt_preview_label1);
//        this.resetLabelIcon(idv_rt_preview_label1);
//    }
//
//    public void setLabelIcon(JLabel lbl, FPSegment segment) {
//        try {
//            BufferedImage bi = com.faisal.tm.CSD550E.Utils.getGrayscale(segment.getW(), segment.getH(), segment.getSegData());
//            BufferedImage scaledImage = new BufferedImage(lbl.getWidth(), lbl.getHeight(), BufferedImage.TYPE_BYTE_GRAY);
//            // Paint scaled version of image to new image
//            Graphics2D graphics2D = scaledImage.createGraphics();
//            graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
//                    RenderingHints.VALUE_INTERPOLATION_BILINEAR);
//            graphics2D.drawImage(bi, 0, 0, lbl.getWidth(), lbl.getHeight(), null);
//            // clean up
//            graphics2D.dispose();
//
//            ImageIcon icon = new ImageIcon(scaledImage);
//            lbl.setIcon(icon);
//        } catch (Exception exc) {
//            exc.printStackTrace();
//        }
//    }
//
//    public void setLeftFingerIcons() {
//        FPSegment[] segments = this.leftFPData.getSegments();
//        this.setLabelIcon(idv_lp_preview_label1, segments[0]);
//        this.setLabelIcon(idv_lr_preview_label1, segments[1]);
//        this.setLabelIcon(idv_lm_preview_label1, segments[2]);
//        this.setLabelIcon(idv_li_preview_label1, segments[3]);
//
//    }
//
//    public void setRightFingerIcons() {
//        FPSegment[] segments = this.rightFPData.getSegments();
//        this.setLabelIcon(idv_ri_preview_label1, segments[0]);
//        this.setLabelIcon(idv_rm_preview_label1, segments[1]);
//        this.setLabelIcon(idv_rr_preview_label1, segments[2]);
//        this.setLabelIcon(idv_rp_preview_label1, segments[3]);
//    }
//
//    public void setThumbFingerIcons() {
//        FPSegment[] segments = this.thumbFPData.getSegments();
//        this.setLabelIcon(idv_lt_preview_label1, segments[0]);
//        this.setLabelIcon(idv_rt_preview_label1, segments[1]);
//    }
//
//    public void setFingerCnt(int fingerCnt) {
//        this.fingerCnt = fingerCnt;
//    }
//
//    public void setWhichFinger(int whichFinger) {
//        this.whichFinger = whichFinger;
//    }
//
//// REM 3M ENDS    
//// 3M ENDS
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
//        if (Defs.IS_CROSSMATCH) {
//
//            System.exit(0);
//
//        }

    }//GEN-LAST:event_formWindowClosed

    private void idv_lt_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_lt_cap1MouseClicked
        // TODO add your handling code here:

//        setBatchIconNullExcept(6);

//        if (isFpDeviceConnected) {
//            idv_lt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 6;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_lt_cap1MouseClicked

    private void idv_li_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_li_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(7);
//            reset();
//            setIconNull(2);
//            setIconNull(1);
//            setIconNull(6);
//        if (isFpDeviceConnected) {
//            idv_li_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 7;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_li_cap1MouseClicked

    private void idv_rt_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_rt_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(1);

//        if (this.isFpDeviceConnected) {
//            idv_rt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 1;
//            abortCapture();
//            reset();
//        }

    }//GEN-LAST:event_idv_rt_cap1MouseClicked

    private void idv_ri_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_ri_cap1MouseClicked
        // TODO add your handling code here:

//        setBatchIconNullExcept(2);
//        if (isFpDeviceConnected) {
//            idv_ri_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 2;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_ri_cap1MouseClicked

    private void idv_capture_complete_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idv_capture_complete_button1ActionPerformed
        // TODO add your handling code here:
//        dispose();
    }//GEN-LAST:event_idv_capture_complete_button1ActionPerformed

    private void idv_capture_cancel_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idv_capture_cancel_button1ActionPerformed
        // TODO add your handling code here:
//        dispose();
    }//GEN-LAST:event_idv_capture_cancel_button1ActionPerformed

    private void idv_capture_reset_button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idv_capture_reset_button1ActionPerformed
        // TODO add your handling code here:
//        reset_identification_verification_finger_panel();
//        startCrossmatchAutoSequenceCapture();
    }//GEN-LAST:event_idv_capture_reset_button1ActionPerformed

    private void idv_finger_print_panel1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_idv_finger_print_panel1ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_idv_finger_print_panel1ComponentHidden

    private void idv_finger_print_panel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_idv_finger_print_panel1ComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_idv_finger_print_panel1ComponentShown

    private void idv_rm_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_rm_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(3);
//        if (isFpDeviceConnected) {
//            idv_rm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 3;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_rm_cap1MouseClicked

    private void idv_rr_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_rr_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(4);
//        if (isFpDeviceConnected) {
//            idv_rr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 4;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_rr_cap1MouseClicked

    private void idv_rp_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_rp_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(5);
//        if (isFpDeviceConnected) {
//            idv_rp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 5;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_rp_cap1MouseClicked

    private void idv_lm_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_lm_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(8);
//        if (isFpDeviceConnected) {
//            idv_lm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 8;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_lm_cap1MouseClicked

    private void idv_lr_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_lr_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(9);
//        if (isFpDeviceConnected) {
//            idv_lr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 9;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_lr_cap1MouseClicked

    private void idv_lp_cap1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idv_lp_cap1MouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(10);
//        if (isFpDeviceConnected) {
//            idv_lp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 10;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_idv_lp_cap1MouseClicked

    private void leftFourFingerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftFourFingerLabelMouseClicked
        // TODO add your handling code here:

//        setBatchIconNullExcept(11);
//        if (isFpDeviceConnected) {
//            showLeftFingersPointer(); // NOI18N
//            current_selected_index = 11;
//            abortCapture();
//            reset();
//        }

    }//GEN-LAST:event_leftFourFingerLabelMouseClicked

    private void rightFourFingerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightFourFingerLabelMouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(12);
//        if (isFpDeviceConnected) {
//            showRightFingersPointer();
//            current_selected_index = 12;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_rightFourFingerLabelMouseClicked

    private void twoThumbsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoThumbsLabelMouseClicked
        // TODO add your handling code here:
//        setBatchIconNullExcept(13);
//        if (isFpDeviceConnected) {
//            showThumbFingersPointer();
//            current_selected_index = 13;
//            abortCapture();
//            reset();
//        }
    }//GEN-LAST:event_twoThumbsLabelMouseClicked

//    public void startCrossmatchAutoSequenceCapture() {
//
//        setIconNull(0);
//
//
//        if (current_selected_index > 10) {
//            if (ApplicationNidPanel.applicationData.getWsqLl() == null || ApplicationNidPanel.applicationData.getWsqLr() == null || ApplicationNidPanel.applicationData.getWsqLm() == null || ApplicationNidPanel.applicationData.getWsqLi() == null) {
//                isAutoCapture = true;
//                current_selected_index = 11;
//                showLeftFingersPointer();
//            }
//            else if (ApplicationNidPanel.applicationData.getWsqRl() == null || ApplicationNidPanel.applicationData.getWsqRr() == null || ApplicationNidPanel.applicationData.getWsqRm() == null || ApplicationNidPanel.applicationData.getWsqRi() == null) {
//                isAutoCapture = true;
//                current_selected_index = 12;
//                showRightFingersPointer();
//            } else if (ApplicationNidPanel.applicationData.getWsqLt() == null || ApplicationNidPanel.applicationData.getWsqRt() == null) {
//                isAutoCapture = true;
//                current_selected_index = 13;
//                showThumbFingersPointer();
//            }
//            else
//                isAutoCapture=false;
//            
//            if(isAutoCapture)
//                reset();
//            return;
//        }
//
//
//
//
//
//
//
//        if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 1) {
//            idv_rt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 1;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 2) {
//            idv_ri_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 2;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 3) {
//            idv_rm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 3;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 4) {
//            idv_rr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 4;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 5) {
//            idv_rp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 5;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 7) {
//            idv_li_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 7;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 6) {
//            idv_lt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 6;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 8) {
//            idv_lm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 8;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 9) {
//            idv_lr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 9;
//        } else if ((isFpDeviceConnected) && checkFingerPrintCaptureSequenceStatus() == 10) {
//            idv_lp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//            current_selected_index = 10;
//        } else {
//            isAutoCapture = false;
//        }
//        if (isAutoCapture) {
//            reset();
//        }
//    }
//
//    private int checkFingerPrintCaptureSequenceStatus() {
//
//        int current_sequence = 0;
//
//        if (ApplicationNidPanel.applicationData.getWsqRt() == null) {
//            isAutoCapture = true;
//            current_sequence = 1;
//        } else if (ApplicationNidPanel.applicationData.getWsqRi() == null) {
//            isAutoCapture = true;
//            current_sequence = 2;
//        } else if (ApplicationNidPanel.applicationData.getWsqRm() == null) {
//            isAutoCapture = true;
//            current_sequence = 3;
//        } else if (ApplicationNidPanel.applicationData.getWsqRr() == null) {
//            isAutoCapture = true;
//            current_sequence = 4;
//        } else if (ApplicationNidPanel.applicationData.getWsqRl() == null) {
//            isAutoCapture = true;
//            current_sequence = 5;
//        } else if (ApplicationNidPanel.applicationData.getWsqLt() == null) {
//            isAutoCapture = true;
//            current_sequence = 6;
//        } else if (ApplicationNidPanel.applicationData.getWsqLi() == null) {
//            isAutoCapture = true;
//            current_sequence = 7;
//        } else if (ApplicationNidPanel.applicationData.getWsqLm() == null) {
//            isAutoCapture = true;
//            current_sequence = 8;
//        } else if (ApplicationNidPanel.applicationData.getWsqLr() == null) {
//            isAutoCapture = true;
//            current_sequence = 9;
//        } else if (ApplicationNidPanel.applicationData.getWsqLl() == null) {
//            isAutoCapture = true;
//            current_sequence = 10;
//        } else {
//            isAutoCapture = false;
//            current_sequence = 0;
//        }
//
//        return current_sequence;
//    }
//
//    public String syncCron() {
//        String response = "";
//
//        return response;
//    }

//    private void exitProgram() {
//        addWindowListener(new WindowAdapter() {
//            public void windowClosing(WindowEvent e) {
//                dispose();
//                System.exit(0); //calling the method is a must
//            }
//        });
//    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FingerPrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FingerPrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FingerPrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FingerPrintForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

//        Utils.printSoapRequestResponse();

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ApplicationNidPanel.applicationData = new ApplicationData();
//                FingerPrintForm fpView = new FingerPrintForm();
////                fpView.addWindowListener(fpView);
//                filter = new FileNameExtensionFilter("Image Files", "jpg");
//                fpView.setTitle("3M");
//                fpView.setLocationRelativeTo(null);
//                fpView.setVisible(true);
//            }
//        });
//    }

//    private void reset_identification_verification_finger_panel() {
//
//        setIconNull(0);
//
//        idv_rt_preview_label1.setIcon(null);
//        idv_ri_preview_label1.setIcon(null);
//        idv_rm_preview_label1.setIcon(null);
//        idv_rr_preview_label1.setIcon(null);
//        idv_rp_preview_label1.setIcon(null);
//        idv_lt_preview_label1.setIcon(null);
//        idv_li_preview_label1.setIcon(null);
//        idv_lm_preview_label1.setIcon(null);
//        idv_lr_preview_label1.setIcon(null);
//        idv_lp_preview_label1.setIcon(null);
//    }

    //******************************* ALL CODES WRITTEN HERE NEED TO BE BOUGHT TO A SINGLE CLASS TO BE MODULAR ************************
    //*********************************************************************************************************************************
    

//    private String setQualityCheck(String qualityImage) {
//
//        String image_name = null;
//
//        if (qualityImage.equalsIgnoreCase("green")) {
//            image_name = "/com/perp/images/green-tick.png";
//        } else if (qualityImage.equalsIgnoreCase("orange")) {
//            image_name = "/com/perp/images/orange-tick.png";
//        } else {
//            image_name = "/com/perp/images/red-minus.png";
//        }
//
//        return image_name;
//
//    }
//
//    public void setIconNull(int index) {
//
//        if (index == 1) {
//            if (ApplicationNidPanel.applicationData.getWsqRt() == null) {
//                idv_rt_pointer.setIcon(null);
//            }
//        } else if (index == 2) {
//            if (ApplicationNidPanel.applicationData.getWsqRi() == null) {
//                idv_ri_pointer.setIcon(null);
//            }
//        } else if (index == 3) {
//            idv_rm_pointer1.setIcon(null);
//        } else if (index == 4) {
//            idv_rr_pointer1.setIcon(null);
//        } else if (index == 5) {
//            idv_rp_pointer1.setIcon(null);
//        } else if (index == 6) {
//            if (ApplicationNidPanel.applicationData.getWsqLt() == null) {
//                idv_lt_pointer.setIcon(null);
//            }
//        } else if (index == 7) {
//            if (ApplicationNidPanel.applicationData.getWsqLi() == null) {
//                idv_li_pointer.setIcon(null);
//            }
//        } else if (index == 8) {
//            idv_lm_pointer1.setIcon(null);
//        } else if (index == 9) {
//            idv_lr_pointer1.setIcon(null);
//        } else if (index == 10) {
//            idv_lp_pointer1.setIcon(null);
//        } else {
//
//            idv_rt_pointer.setIcon(null);
//            idv_ri_pointer.setIcon(null);
//            idv_rm_pointer1.setIcon(null);
//            idv_rr_pointer1.setIcon(null);
//            idv_rp_pointer1.setIcon(null);
//            idv_lt_pointer.setIcon(null);
//            idv_li_pointer.setIcon(null);
//            idv_lm_pointer1.setIcon(null);
//            idv_lr_pointer1.setIcon(null);
//            idv_lp_pointer1.setIcon(null);
//
//        }
//
//    }
//
//    
//
//    public void captureCrossmatchFingerPrint(byte[] fp) {
//        if (current_selected_index == 1) {
//            ApplicationNidPanel.applicationData.setWsqRt(fp);
//        } else if (current_selected_index == 2) {
//            ApplicationNidPanel.applicationData.setWsqRi(fp);
//        } else if (current_selected_index == 6) {
//            ApplicationNidPanel.applicationData.setWsqLt(fp);
//        } else if (current_selected_index == 7) {
//            ApplicationNidPanel.applicationData.setWsqLi(fp);
//        }
//
//
//    }
    //*********************************************************************************************************************************
    //*********************************************************************************************************************************
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Canvas fpCanvas;
    private java.awt.Canvas fpCanvas1;
    private javax.swing.JButton idv_capture_cancel_button1;
    private javax.swing.JButton idv_capture_complete_button1;
    private javax.swing.JButton idv_capture_reset_button1;
    private javax.swing.JPanel idv_finger_print_panel1;
    private javax.swing.JLabel idv_li_cap1;
    private javax.swing.JLabel idv_li_pointer;
    private javax.swing.JLabel idv_li_pointer1;
    private javax.swing.JLabel idv_li_preview_label1;
    private javax.swing.JLabel idv_lm_cap1;
    private javax.swing.JLabel idv_lm_pointer1;
    private javax.swing.JLabel idv_lm_preview_label1;
    private javax.swing.JLabel idv_lp_cap1;
    private javax.swing.JLabel idv_lp_pointer1;
    private javax.swing.JLabel idv_lp_preview_label1;
    private javax.swing.JLabel idv_lr_cap1;
    private javax.swing.JLabel idv_lr_pointer1;
    private javax.swing.JLabel idv_lr_preview_label1;
    private javax.swing.JLabel idv_lt_cap1;
    private javax.swing.JLabel idv_lt_pointer;
    private javax.swing.JLabel idv_lt_pointer1;
    private javax.swing.JLabel idv_lt_preview_label1;
    private javax.swing.JLabel idv_ri_cap1;
    private javax.swing.JLabel idv_ri_pointer;
    private javax.swing.JLabel idv_ri_pointer1;
    private javax.swing.JLabel idv_ri_preview_label1;
    private javax.swing.JLabel idv_rm_cap1;
    private javax.swing.JLabel idv_rm_pointer1;
    private javax.swing.JLabel idv_rm_preview_label1;
    private javax.swing.JLabel idv_rp_cap1;
    private javax.swing.JLabel idv_rp_pointer1;
    private javax.swing.JLabel idv_rp_preview_label1;
    private javax.swing.JLabel idv_rr_cap1;
    private javax.swing.JLabel idv_rr_pointer1;
    private javax.swing.JLabel idv_rr_preview_label1;
    private javax.swing.JLabel idv_rt_cap1;
    private javax.swing.JLabel idv_rt_pointer;
    private javax.swing.JLabel idv_rt_pointer1;
    private javax.swing.JLabel idv_rt_preview_label1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel leftFourFingerLabel;
    private javax.swing.JLabel left_hand_base_label1;
    private static javax.swing.JPanel main_content_panel;
    private javax.swing.JPanel previewPanel;
    private javax.swing.JLabel rightFourFingerLabel;
    private javax.swing.JLabel right_hand_base_label1;
    private javax.swing.JLabel status;
    private javax.swing.JLabel twoThumbsLabel;
    // End of variables declaration//GEN-END:variables

//    private void idv_finger_print_panelComponentShown() {
//
//        reset_identification_verification_finger_panel();
////        startCrossmatchAutoSequenceCapture();
//
//    }

//    private void setBatchIconNullExcept(int exceptIconIndex) {
//        for (int i = 1; i < 11; i++) {
//            if (i == exceptIconIndex); else {
//                setIconNull(i);
//            }
//
//        }
//
//
//    }
//
//    private void showLeftFingersPointer() {
//        idv_li_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_lp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_lm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_lr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//    }
//
//    private void showRightFingersPointer() {
//        idv_ri_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_rp_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_rm_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_rr_pointer1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//    }
//
//    private void showThumbFingersPointer() {
//        idv_rt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//        idv_lt_pointer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/perp/images/arrow.gif"))); // NOI18N
//    }
//    
//    private byte[] getWsqFromRaw(FPSegment fseg)
//    {
//       WSQConverter wc=new WSQConverter();
//       try{
//        return wc.convertToWSQ(fseg.getSegData(),fseg.getW(),fseg.getH());
//       }
//       catch(Throwable ex)
//       {
//           ex.printStackTrace();
//       }   
//        return null;
//    }
//    
//    private void abortCapture()
//    {
//        csdLibrary.CG4_Capture_Abort();
//    }

    @Override
    public void windowOpened(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosing(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosed(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowIconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public FPData getFPData() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getFingerCnt() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFPData(FPData fpData) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void segmentationDone() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void segmentationFailed(String msg) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int getWhichFinger() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Image getFPImage() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFPImagePreview(Image img) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setFPImageFinal(Image img) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setCaptureDone() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void qualityComputeDone() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void qualityComputeFailed(String errMsg) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    
}