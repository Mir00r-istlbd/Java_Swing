/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istlbd.gui;

import business.bean.RoleManagerBean;
import business.bean.RoleOperationManagerBean;
import business.bean.Utils;
import business.entity.BioRole;
import business.entity.BioRoleOperation;
import business.entity.Item;
import com.istlbd.utils.Defs;
import com.istlbd.utils.Lookup;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.xswingx.PromptSupport;
import ws.response.GetRoleOperationSummaryResponse;
import ws.response.GetRoleSummaryResponse;

/**
 *
 * @author Maverick
 */
public class RoleSearchPanel extends javax.swing.JPanel {

    private static ArrayList<BioRole> tabledata;
    private static DefaultTableModel historyTableModel = null;
    //for pagination
    private static boolean isPaginationInitialized = false;
    private static Integer maximum_record_display_limit = 10; // this shows the record per page
    private static Integer total_segments = 0;
    private static Map<Integer, Integer> segmentMap = null;
    private static Integer current_segment = null;
    private static Integer previous_segment = null;
    private static Integer next_segment = null;
    private static Integer btn_pgn_one_segment = null;
    private static Integer btn_pgn_two_segment = null;
    private static Integer btn_pgn_three_segment = null;

    /**
     * Creates new form SearchPanel
     */
    public RoleSearchPanel() {

        initComponents();

        hidePaginationButtons();
        lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + "0");
        roleListTable.getColumnModel().getColumn(4).setMinWidth(0);
        roleListTable.getColumnModel().getColumn(4).setMaxWidth(0);
        setDefaultRpp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srchGenderButtonGroup = new javax.swing.ButtonGroup();
        srchEduButtonGroup = new javax.swing.ButtonGroup();
        search_content_panel = new javax.swing.JPanel();
        inp_search_bar = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        lbl_search_total_records = new javax.swing.JLabel();
        panel_search_pagination = new javax.swing.JPanel();
        btn_search_pgnation_next = new javax.swing.JButton();
        btn_search_pgnation_prev = new javax.swing.JButton();
        btn_search_pgnation_three = new javax.swing.JButton();
        btn_search_pgnation_one = new javax.swing.JButton();
        btn_search_pgnation_two = new javax.swing.JButton();
        cmb_search_rpp = new javax.swing.JComboBox();
        lbl_rpp = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roleListTable = new javax.swing.JTable();
        createUserButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1350, 690));
        setMinimumSize(new java.awt.Dimension(1350, 690));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1350, 690));

        search_content_panel.setBackground(new java.awt.Color(255, 255, 255));
        search_content_panel.setMaximumSize(new java.awt.Dimension(1350, 680));
        search_content_panel.setMinimumSize(new java.awt.Dimension(1350, 680));
        search_content_panel.setOpaque(false);
        search_content_panel.setLayout(null);

        inp_search_bar.setToolTipText("");
        inp_search_bar.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        search_content_panel.add(inp_search_bar);
        inp_search_bar.setBounds(150, 30, 975, 30);
        //for search bar
        PromptSupport.setPrompt(Defs.USER_SEARCH_BAR_TEXT, inp_search_bar);
        PromptSupport.setForeground(Color.GRAY, inp_search_bar);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_search_bar);

        btn_search.setBackground(new java.awt.Color(255, 255, 255));
        btn_search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btn_new_search.png"))); // NOI18N
        btn_search.setText("Search");
        btn_search.setToolTipText("");
        btn_search.setIconTextGap(10);
        btn_search.setMaximumSize(new java.awt.Dimension(120, 30));
        btn_search.setMinimumSize(new java.awt.Dimension(120, 30));
        btn_search.setPreferredSize(new java.awt.Dimension(120, 30));
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        search_content_panel.add(btn_search);
        btn_search.setBounds(1180, 30, 120, 30);

        lbl_search_total_records.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_content_panel.add(lbl_search_total_records);
        lbl_search_total_records.setBounds(30, 70, 500, 30);

        panel_search_pagination.setOpaque(false);
        panel_search_pagination.setLayout(null);

        btn_search_pgnation_next.setBackground(new java.awt.Color(255, 255, 255));
        btn_search_pgnation_next.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_next.setText("Next");
        btn_search_pgnation_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_nextActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_next);
        btn_search_pgnation_next.setBounds(240, 5, 70, 30);

        btn_search_pgnation_prev.setBackground(new java.awt.Color(255, 255, 255));
        btn_search_pgnation_prev.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_prev.setText("Prev");
        btn_search_pgnation_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_prevActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_prev);
        btn_search_pgnation_prev.setBounds(10, 5, 70, 30);

        btn_search_pgnation_three.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_three.setText("3");
        btn_search_pgnation_three.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_threeActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_three);
        btn_search_pgnation_three.setBounds(190, 5, 40, 30);

        btn_search_pgnation_one.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_one.setText("1");
        btn_search_pgnation_one.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_oneActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_one);
        btn_search_pgnation_one.setBounds(90, 5, 40, 30);

        btn_search_pgnation_two.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_two.setText("2");
        btn_search_pgnation_two.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_twoActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_two);
        btn_search_pgnation_two.setBounds(140, 5, 40, 30);

        search_content_panel.add(panel_search_pagination);
        panel_search_pagination.setBounds(1000, 550, 320, 40);

        cmb_search_rpp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_search_rpp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_search_rppItemStateChanged(evt);
            }
        });
        cmb_search_rpp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_search_rppActionPerformed(evt);
            }
        });
        search_content_panel.add(cmb_search_rpp);
        cmb_search_rpp.setBounds(1250, 70, 50, 25);

        lbl_rpp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_rpp.setText("Records per page :");
        search_content_panel.add(lbl_rpp);
        lbl_rpp.setBounds(1140, 70, 115, 25);

        roleListTable.setBackground(new java.awt.Color(204, 204, 204));
        roleListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Role Name", "Role Description", "Status", "View", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(roleListTable);

        search_content_panel.add(jScrollPane1);
        jScrollPane1.setBounds(30, 120, 1270, 420);

        createUserButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createUserButton.setText("NEW");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });
        search_content_panel.add(createUserButton);
        createUserButton.setBounds(30, 550, 100, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1350, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(search_content_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1350, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(search_content_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 76, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_search_pgnation_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_prevActionPerformed

        generateBackupHistoryList(previous_segment);

    }//GEN-LAST:event_btn_search_pgnation_prevActionPerformed

    private void btn_search_pgnation_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_nextActionPerformed

        generateBackupHistoryList(next_segment);

    }//GEN-LAST:event_btn_search_pgnation_nextActionPerformed

    private void btn_search_pgnation_oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_oneActionPerformed

        generateBackupHistoryList(btn_pgn_one_segment);

    }//GEN-LAST:event_btn_search_pgnation_oneActionPerformed

    private void btn_search_pgnation_twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_twoActionPerformed

        generateBackupHistoryList(btn_pgn_two_segment);

    }//GEN-LAST:event_btn_search_pgnation_twoActionPerformed

    private void btn_search_pgnation_threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_threeActionPerformed

        generateBackupHistoryList(btn_pgn_three_segment);

    }//GEN-LAST:event_btn_search_pgnation_threeActionPerformed

    private void cmb_search_rppItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_search_rppItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            String value = (((Item) cmb_search_rpp.getSelectedItem()).getValue().toString());
            Integer rpp = Integer.parseInt(value);
            
            if(value != null && rpp != maximum_record_display_limit){
            
                maximum_record_display_limit = rpp;
                isPaginationInitialized = false;
                generateBackupHistoryList(1);
                
            }
        }

    }//GEN-LAST:event_cmb_search_rppItemStateChanged

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        executeRoleSearchReq();
    }//GEN-LAST:event_btn_searchActionPerformed

    private void cmb_search_rppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_search_rppActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_search_rppActionPerformed

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        // TODO add your handling code here:
//        RoleCreateFormOld ucf=new RoleCreateFormOld();
//        Lookup.roleData=new BioRole();
//        
//        //ucf.prepareRoleDropDown();
//        ucf.prepareOperationList();
//        ucf.setVisible(true);
        RoleCreationForm rcf=new RoleCreationForm();
        Lookup.roleData=new BioRole();
        
        //ucf.prepareRoleDropDown();
        rcf.prepareOperationList();
        rcf.setVisible(true);
    }//GEN-LAST:event_createUserButtonActionPerformed

    

    private void executeRoleSearchReq() {

        
        
        // initialize the object for search
        RoleManagerBean rmb = new RoleManagerBean();
        BioRole role = new BioRole();

            //Bangla Name
            role.setRolename(inp_search_bar.getText());

            GetRoleSummaryResponse resp = new GetRoleSummaryResponse();

            resp = rmb.getAdvancedSearchRoleInfo(0L, 1000L, role);

        if (resp != null && resp.isOperationStatus() && resp.getRoleList()!= null && resp.getRoleList().size() > 0) {

            lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + resp.getTotalResult());

            if (tabledata == null) {
                tabledata = new ArrayList<BioRole>();
            }
            tabledata.clear();
            tabledata.addAll(resp.getRoleList());
        } else {

            lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + "0");
            if (tabledata != null) {
                tabledata.clear();
            }
        }

        isPaginationInitialized = false;
        generateBackupHistoryList(1);

    }

//    private void generateBackupHistoryList() {
//
//        if (historyTableModel == null) {
//            historyTableModel = (DefaultTableModel) Backup_history_table.getModel();
//        }
//
//        if (tabledata == null) {
//
//            System.out.println("Not content in backup arraylist");
//            historyTableModel.setRowCount(0);
//            return;
//        }
//
//        historyTableModel.setRowCount(0);
//
//        //set header alignment
//        DefaultTableCellRenderer centerRenderer_h = new DefaultTableCellRenderer();
//        centerRenderer_h = (DefaultTableCellRenderer) Backup_history_table.getTableHeader().getDefaultRenderer();
//        centerRenderer_h.setHorizontalAlignment(javax.swing.JLabel.CENTER);
//
//        //set data alignment
//        DefaultTableCellRenderer centerRenderer_c = new DefaultTableCellRenderer();
//        centerRenderer_c.setHorizontalAlignment(javax.swing.JLabel.CENTER);
//
//        for (int i = 0; i < Backup_history_table.getColumnCount(); i++) {
//
//            Backup_history_table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer_c);
//
//        }
//        if (tabledata != null) {
//            
//            //populate table data
//            for (int t = 0; t < tabledata.size(); t++) {
//                //set row height
//                Backup_history_table.setRowHeight(25);
//
//                Backup_history_table.getColumn("View").setCellRenderer(new ButtonRenderer());
//                Backup_history_table.getColumn("View").setCellEditor(new ButtonEditor(new JCheckBox()));
//
//                Object[] row = {tabledata.get(t).getPinNo(), tabledata.get(t).getFirstName(), tabledata.get(t).getLastName(), tabledata.get(t).getGender(), tabledata.get(t).getDateOfBirth(), tabledata.get(t).getEmail(), "View", tabledata.get(t).getId().toString()};
//                historyTableModel.addRow(row);
//            }
//        }
//
//    }
    private void generateBackupHistoryList(Integer segment) {

        if (historyTableModel == null) {
            historyTableModel = (DefaultTableModel) roleListTable.getModel();
        }

        if (tabledata == null) {

//            System.out.println("Not content in backup arraylist");
            historyTableModel.setRowCount(0);
            return;
        }

        historyTableModel.setRowCount(0);

        //set header alignment
        DefaultTableCellRenderer centerRenderer_h = new DefaultTableCellRenderer();
        centerRenderer_h = (DefaultTableCellRenderer) roleListTable.getTableHeader().getDefaultRenderer();
        centerRenderer_h.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        centerRenderer_h.setBackground(new Color(239, 198, 46));
        centerRenderer_h.setOpaque(true);

        //set data alignment
        DefaultTableCellRenderer centerRenderer_c = new DefaultTableCellRenderer();
        centerRenderer_c.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < roleListTable.getColumnCount(); i++) {

            roleListTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer_c);

        }
        if (tabledata != null) {

            int start_index = 0;
            //------------------------------------------------ pagination start ------------------------------------

            if (tabledata.size() <= maximum_record_display_limit) {

                hidePaginationButtons();

            } else {

                if (!isPaginationInitialized) {
                    createPaginationSegments();
                }

                start_index = segmentMap.get(segment);

                //setting current selected segment
                current_segment = segment;
                configurePaginationButtons();

            }

            //------------------------------------------------ pagination end --------------------------------------

            //populate table data
            for (int t = 0; t < maximum_record_display_limit; t++) {

                //check for pagination
                if (start_index == tabledata.size()) {
                    break;
                }

                //set row height
                roleListTable.setRowHeight(25);

                roleListTable.getColumn("View").setCellRenderer(new ButtonRenderer());
                roleListTable.getColumn("View").setCellEditor(new RoleButtonEditor(new JCheckBox()));

                Object[] row = {tabledata.get(start_index).getRolename(), tabledata.get(start_index).getRoleDescription(),tabledata.get(start_index).getStatus(), "View", tabledata.get(start_index).getId().toString()};
                historyTableModel.addRow(row);
                start_index++;

            }

        }

    }

    private void createPaginationSegments() {

        total_segments = tabledata.size() / maximum_record_display_limit;

        if ((tabledata.size() % maximum_record_display_limit) != 0) {
            total_segments += 1;
        }

        segmentMap = new HashMap<Integer, Integer>();

        for (int s = 0; s < total_segments; s++) {

            int segment = s + 1;

            if (s == 0) {

                segmentMap.put(segment, 0);

            } else {

                int segmentStartIndex = ((segment - 1) * maximum_record_display_limit);
                segmentMap.put(segment, segmentStartIndex);
                
            }

        }

        isPaginationInitialized = true;

    }

    private void configurePaginationButtons() {

        //setting previous segment
        if (current_segment != 1) {
            previous_segment = current_segment - 1;
            btn_search_pgnation_prev.setVisible(true);
        } else {
            previous_segment = null;
            btn_search_pgnation_prev.setVisible(false);
        }

        //setting next segment
        if (current_segment != total_segments) {
            next_segment = current_segment + 1;
            btn_search_pgnation_next.setVisible(true);
        } else {
            next_segment = null;
            btn_search_pgnation_next.setVisible(false);
        }

        //first pagination button
        btn_search_pgnation_one.setVisible(true);
        if (current_segment <= 3) {
            btn_pgn_one_segment = 1;
            btn_search_pgnation_one.setText(btn_pgn_one_segment.toString());
        } else {
            btn_pgn_one_segment = current_segment - 2;
            btn_search_pgnation_one.setText(btn_pgn_one_segment.toString());
        }

        //second pagination button
        btn_search_pgnation_two.setVisible(true);
        if (current_segment <= 3) {

            btn_pgn_two_segment = 2;
            btn_search_pgnation_two.setText(btn_pgn_two_segment.toString());

        } else {

            btn_pgn_two_segment = current_segment - 1;
            btn_search_pgnation_two.setText(btn_pgn_two_segment.toString());

        }

        if (total_segments >= 3) {

            btn_search_pgnation_three.setVisible(true);

            if (current_segment <= 3) {

                btn_pgn_three_segment = 3;
                btn_search_pgnation_three.setText(btn_pgn_three_segment.toString());

            } else {

                btn_pgn_three_segment = current_segment;
                btn_search_pgnation_three.setText(btn_pgn_three_segment.toString());

            }

        } else {

            btn_search_pgnation_three.setVisible(false);

        }

        //setting button positions
        if (!btn_search_pgnation_next.isVisible() && btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(90, 5);
            btn_search_pgnation_one.setLocation(170, 5);
            btn_search_pgnation_two.setLocation(220, 5);
            btn_search_pgnation_three.setLocation(270, 5);

        } else if (btn_search_pgnation_next.isVisible() && btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(10, 5);
            btn_search_pgnation_one.setLocation(90, 5);
            btn_search_pgnation_two.setLocation(140, 5);
            btn_search_pgnation_three.setLocation(190, 5);
            btn_search_pgnation_next.setLocation(240, 5);

        } else if (!btn_search_pgnation_next.isVisible() && !btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(140, 5);
            btn_search_pgnation_one.setLocation(220, 5);
            btn_search_pgnation_two.setLocation(270, 5);

        } else {

            btn_search_pgnation_one.setLocation(140, 5);
            btn_search_pgnation_two.setLocation(190, 5);
            btn_search_pgnation_next.setLocation(240, 5);

        }

        //setting selected button
        if ((current_segment == 1) || (current_segment == btn_pgn_one_segment)) {
            btn_search_pgnation_one.setSelected(true);
            btn_search_pgnation_two.setSelected(false);
            btn_search_pgnation_three.setSelected(false);
        } else if ((current_segment == 2) || (current_segment == btn_pgn_two_segment)) {
            btn_search_pgnation_one.setSelected(false);
            btn_search_pgnation_two.setSelected(true);
            btn_search_pgnation_three.setSelected(false);
        } else if ((current_segment == 3) || (current_segment == btn_pgn_three_segment)) {
            btn_search_pgnation_one.setSelected(false);
            btn_search_pgnation_two.setSelected(false);
            btn_search_pgnation_three.setSelected(true);
        }

    }

    private void hidePaginationButtons() {

        btn_search_pgnation_prev.setVisible(false);
        btn_search_pgnation_one.setVisible(false);
        btn_search_pgnation_two.setVisible(false);
        btn_search_pgnation_three.setVisible(false);
        btn_search_pgnation_next.setVisible(false);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_search_pgnation_next;
    private javax.swing.JButton btn_search_pgnation_one;
    private javax.swing.JButton btn_search_pgnation_prev;
    private javax.swing.JButton btn_search_pgnation_three;
    private javax.swing.JButton btn_search_pgnation_two;
    private javax.swing.JComboBox cmb_search_rpp;
    private javax.swing.JButton createUserButton;
    public static javax.swing.JTextField inp_search_bar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_rpp;
    private javax.swing.JLabel lbl_search_total_records;
    private javax.swing.JPanel panel_search_pagination;
    public static javax.swing.JTable roleListTable;
    private javax.swing.JPanel search_content_panel;
    private javax.swing.ButtonGroup srchEduButtonGroup;
    private javax.swing.ButtonGroup srchGenderButtonGroup;
    // End of variables declaration//GEN-END:variables

    public static void viewDetails(String details_id) {
        Lookup.roleData=new BioRole();

        
        RoleManagerBean umb=new RoleManagerBean();
        
        GetRoleSummaryResponse usr=new GetRoleSummaryResponse();
        
        usr=umb.getSingleRoleInfo(details_id);
        
        // getting role operation info
        
        
        
        
        
        
        RoleCreationForm rcf =new RoleCreationForm();
        if(usr!=null && usr.isOperationStatus())
        {
            
            BioRole bo=usr.getSingleUser();
            
            rcf.inp_role_name.setText(bo.getRolename());
            rcf.txt_role_desc.setText(bo.getRoleDescription());
//            ucf.fullnameField.setText(bo.getFullName());
//            ucf.designationField.setText(bo.getDesignation());
//            ucf.phoneNoField.setText(bo.getPhoneNo());
//            ucf.emailField.setText(bo.getEmail());
//            ucf.nidField.setText(bo.getNationalIdNo());
            
            Lookup.roleData.setId(bo.getId());
            Lookup.roleData.setRolename(bo.getRolename());
            Lookup.roleData.setRoleDescription(bo.getRoleDescription());
            
            BioRoleOperation bioRoleOperation = new BioRoleOperation();
            bioRoleOperation.setRoleId(Lookup.roleData.getId());
            RoleOperationManagerBean romb = new RoleOperationManagerBean();
            Lookup.ROLE_OPERATION_LIST = new ArrayList<BioRoleOperation>();
            GetRoleOperationSummaryResponse resp = romb.getAdvancedSearchRoleOperationInfo(0L, 1000L, bioRoleOperation);
            Lookup.ROLE_OPERATION_LIST = resp.getRoleOperationList();
            
            rcf.setSelectedCheckBox();
            
            //rcf.prepareRoleDropDown();
            rcf.setVisible(true);
            
            
        }
        else
        {
            rcf.dispose();
            System.out.println("Exception occurred, dont open form, show error message in box");
            Utils.showErrorMsg("An Error occured.User data not found.");
        
        }
                
        
        
        


    }
    
    
    

    /*private void initializeSearchView() {

        advance_search_content_panel.setSize(new Dimension(1000, 350));
        specific_search_btn_panel.setBounds(2, 313, 996, 35);
        scr_pane_specific_search.setBounds(2, 2, 996, 310);
        specific_search_base_panel.setPreferredSize(new Dimension(996, 310));
        expanded_search_panel.setVisible(false);

        btn_tgl_expand_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/down_rsz.png"))); // NOI18N
        btn_tgl_expand_search.setText("More");

        setPlaceHolder();

    }*/

    /*private void setPlaceHolder() {

        String first_name = "First Name";
        String middle_name = "Middle Name";
        String last_name = "Last Name";

        PromptSupport.setPrompt(first_name, inp_srch_fname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_bng);

        PromptSupport.setPrompt(first_name, inp_srch_fname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_eng);

        PromptSupport.setPrompt(first_name, inp_srch_fname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_spouse);

        PromptSupport.setPrompt(first_name, inp_srch_fname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_mother);

        PromptSupport.setPrompt(first_name, inp_srch_fname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_father);

        PromptSupport.setPrompt(first_name, inp_srch_fname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_grandfather);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_bng);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_eng);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_spouse);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_mother);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_father);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_grandfather);

        PromptSupport.setPrompt(last_name, inp_srch_lname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_bng);

        PromptSupport.setPrompt(last_name, inp_srch_lname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_eng);

        PromptSupport.setPrompt(last_name, inp_srch_lname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_spouse);

        PromptSupport.setPrompt(last_name, inp_srch_lname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_mother);

        PromptSupport.setPrompt(last_name, inp_srch_lname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_father);

        PromptSupport.setPrompt(last_name, inp_srch_lname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_grandfather);

        PromptSupport.setPrompt("Telephone", inp_telephone);
        PromptSupport.setForeground(Color.GRAY, inp_telephone);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_telephone);

        PromptSupport.setPrompt("Mobile", inp_mobile);
        PromptSupport.setForeground(Color.GRAY, inp_mobile);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_mobile);

        PromptSupport.setPrompt("Email", inp_email);
        PromptSupport.setForeground(Color.GRAY, inp_email);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_email);

        PromptSupport.setPrompt("Driving License", inp_driving_license);
        PromptSupport.setForeground(Color.GRAY, inp_driving_license);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_driving_license);

        PromptSupport.setPrompt("TIN", inp_tin_no);
        PromptSupport.setForeground(Color.GRAY, inp_tin_no);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_tin_no);

        PromptSupport.setPrompt("Passport", inp_passport);
        PromptSupport.setForeground(Color.GRAY, inp_passport);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_passport);

    }*/

    /*private void resetSearchPanel() {

        inp_certificate_no.setText("");
        inp_date_of_birth.setCalendar(null);
        inp_driving_license.setText("");
        inp_email.setText("");
        inp_mobile.setText("");
        inp_nid_issue_date.setCalendar(null);
        inp_passport.setText("");
//        inp_search_bar.setText("");
        inp_srch_fname_bng.setText("");
        inp_srch_fname_eng.setText("");
        inp_srch_fname_father.setText("");
        inp_srch_fname_grandfather.setText("");
        inp_srch_fname_mother.setText("");
        inp_srch_fname_spouse.setText("");
        inp_srch_lname_bng.setText("");
        inp_srch_lname_eng.setText("");
        inp_srch_lname_father.setText("");
        inp_srch_lname_grandfather.setText("");
        inp_srch_lname_mother.setText("");
        inp_srch_lname_spouse.setText("");
        inp_srch_mname_bng.setText("");
        inp_srch_mname_eng.setText("");
        inp_srch_mname_father.setText("");
        inp_srch_mname_grandfather.setText("");
        inp_srch_mname_mother.setText("");
        inp_srch_mname_spouse.setText("");
        inp_telephone.setText("");
        inp_tin_no.setText("");
        inp_perm_village.setText("");
        inp_pres_village.setText("");

        cmb_education.setSelectedIndex(0);
        cmb_nid_issue_division.setSelectedIndex(0);
        cmb_perm_add_division.setSelectedIndex(0);
        cmb_present_add_division.setSelectedIndex(0);
        cmb_present_add_upo.setSelectedIndex(0);
        cmb_religion.setSelectedIndex(0);

        srchGenderButtonGroup.clearSelection();

        srchEduButtonGroup.clearSelection();

        chk_srch_handicap_amputant.setSelected(false);
        chk_srch_handicap_deaf.setSelected(false);
        chk_srch_handicap_mute.setSelected(false);
        chk_srch_handicap_others.setSelected(false);
        chk_srch_handicap_speech.setSelected(false);
        chk_srch_handicap_visual.setSelected(false);

    }*/

    private void setDefaultRpp() {

        cmb_search_rpp.addItem(new Item<String>("5", "5"));
        cmb_search_rpp.addItem(new Item<String>("10", "10"));
        cmb_search_rpp.addItem(new Item<String>("15", "15"));
        cmb_search_rpp.addItem(new Item<String>("20", "20"));
        cmb_search_rpp.addItem(new Item<String>("25", "25"));
        cmb_search_rpp.addItem(new Item<String>("50", "50"));
        cmb_search_rpp.addItem(new Item<String>("100", "100"));
        
        cmb_search_rpp.setSelectedIndex(1); // default 10 records per page

    }
}
