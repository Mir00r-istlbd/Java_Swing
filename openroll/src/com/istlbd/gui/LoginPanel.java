/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istlbd.gui;

import business.bean.OperationManagerBean;
import business.bean.RoleOperationManagerBean;
import business.bean.Security;
import business.bean.UserManagerBean;
import business.bean.Utils;
import business.entity.BioOperations;
import business.entity.BioRoleOperation;
import client.bean.UserSession;
import static com.istlbd.gui.ContainerJFrame.mni_search_user;
import database.entity.BioUser;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import ws.response.GetOperationSummaryResponse;
import ws.response.GetRoleOperationSummaryResponse;
import ws.response.GetUserSummaryResponse;

/**
 *
 * @author User
 */
public class LoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginPanel
     */
    public static UserSession userSession;

    public LoginPanel() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_login = new javax.swing.JButton();
        inp_login_user = new javax.swing.JTextField();
        inp_login_pwd = new javax.swing.JPasswordField();
        lbl_login_password = new javax.swing.JLabel();
        lbl_login_username = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1350, 700));
        setMinimumSize(new java.awt.Dimension(1350, 700));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1350, 700));
        setLayout(null);

        btn_login.setBackground(new java.awt.Color(255, 255, 255));
        btn_login.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/login_22.png"))); // NOI18N
        btn_login.setText("Login");
        btn_login.setIconTextGap(20);
        btn_login.setMaximumSize(new java.awt.Dimension(200, 30));
        btn_login.setMinimumSize(new java.awt.Dimension(200, 30));
        btn_login.setPreferredSize(new java.awt.Dimension(200, 30));
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        add(btn_login);
        btn_login.setBounds(610, 400, 200, 30);
        add(inp_login_user);
        inp_login_user.setBounds(610, 320, 200, 30);
        add(inp_login_pwd);
        inp_login_pwd.setBounds(610, 360, 200, 30);

        lbl_login_password.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_login_password.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_login_password.setText("Password");
        add(lbl_login_password);
        lbl_login_password.setBounds(470, 360, 120, 30);

        lbl_login_username.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_login_username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_login_username.setText("User Name");
        add(lbl_login_username);
        lbl_login_username.setBounds(470, 320, 120, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        Security security = new Security();

        String user = inp_login_user.getText();
        //String pwd = inp_login_pwd.getText();

        // Convert password to MD5 format 
        String pwd = null;
        try {
            pwd = security.convertMD5(inp_login_pwd.getText());
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(LoginPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        UserManagerBean ubm = new UserManagerBean();
        GetUserSummaryResponse resp = ubm.getSingleUserInfo(user, pwd);
        
        if (resp != null && resp.isOperationStatus() && resp.getSingleUser() != null) {
            
            if (user.equals(resp.getSingleUser().getUsername()) && pwd.equals(resp.getSingleUser().getPassword())) {
                userSession = new UserSession(user, pwd);
                userSession.setRoleId(resp.getSingleUser().getRoleId());
                RoleOperationManagerBean roleOperationManagerBean = new RoleOperationManagerBean();

                BioRoleOperation bioRoleOperation = new BioRoleOperation();
                bioRoleOperation.setRoleId(userSession.getRoleId());
                GetRoleOperationSummaryResponse roResponse = roleOperationManagerBean.getAdvancedSearchRoleOperationInfo(0L, 1000L, bioRoleOperation);
                
                //System.out.println( "Role ID pai na ken -> %d " + bioRoleOperation.getRoleId() );
                
                if (roResponse != null && roResponse.isOperationStatus() ) {
                    userSession.setRoleOperationList(roResponse.getRoleOperationList());
                    OperationManagerBean opBean = new OperationManagerBean();
                    BioOperations operation = new BioOperations();
                    //operation.setI
                    //opBean.getAdvancedSearchOperationInfo(0L, 1000L, null);
                    List<BioOperations> tmpBioOperationList = new ArrayList<BioOperations>();
                    
                    for (BioRoleOperation bo : userSession.getRoleOperationList()) {
                        GetOperationSummaryResponse operationResp = opBean.getSingleOperationInfo(bo.getOperationId());
                        tmpBioOperationList.add(operationResp.getSingleOperation());
                    }
                    
                    userSession.setUserOperationList(tmpBioOperationList);                    
                }
               // else Utils.showErrorMsg("Hello ");
                
                ContainerJFrame.showDashboard();
                setUserPrivilege();
                ContainerJFrame.MenuBarVar.setVisible(true);
                inp_login_user.setText("");
                inp_login_pwd.setText("");

            } else {
                Utils.showErrorMsg("User name or password invalid");
            }
        } else {
            Utils.showErrorMsg("No user register with this user name and password");
        }
        /*if (user.equals("demo") && pwd.equals("demo")) {

         ContainerJFrame.showDashboard();
         ContainerJFrame.MenuBarVar.setVisible(true);

         } else {

         JOptionPane.showMessageDialog(null, "Invalid Username or Password", "ERROR", JOptionPane.ERROR_MESSAGE);

         }*/

    }//GEN-LAST:event_btn_loginActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btn_login;
    private javax.swing.JPasswordField inp_login_pwd;
    private javax.swing.JTextField inp_login_user;
    private javax.swing.JLabel lbl_login_password;
    private javax.swing.JLabel lbl_login_username;
    // End of variables declaration//GEN-END:variables

    public static UserSession getUserSession() {
        return userSession;
    }
    // Set All types of role based user Privilege 
    public void setUserPrivilege() {

        if (isEnable(ContainerJFrame.dashboard_quicklink_search_button, ContainerJFrame.mni_search_app)) {
            ContainerJFrame.dashboard_quicklink_search_button.setEnabled(true);
            ContainerJFrame.mni_search_app.setEnabled(true);
        } else {
            ContainerJFrame.dashboard_quicklink_search_button.setEnabled(false);
            ContainerJFrame.mni_search_app.setEnabled(false);
        }


        if (isEnable(ContainerJFrame.dashboard_quicklink_app_button, ContainerJFrame.mni_application)) {
            ContainerJFrame.dashboard_quicklink_app_button.setEnabled(true);
            ContainerJFrame.mni_application.setEnabled(true);
        } else {
            ContainerJFrame.dashboard_quicklink_app_button.setEnabled(false);
            ContainerJFrame.mni_application.setEnabled(false);
        }

        if (isEnable(ContainerJFrame.dashboard_quicklink_nid_registration_button, ContainerJFrame.mni_nid_registration)) {
            ContainerJFrame.dashboard_quicklink_nid_registration_button.setEnabled(true);
            ContainerJFrame.mni_nid_registration.setEnabled(true);
        } else {
            ContainerJFrame.dashboard_quicklink_nid_registration_button.setEnabled(false);
            ContainerJFrame.mni_nid_registration.setEnabled(false);
        }

        if (isEnable(ContainerJFrame.dashboard_quicklink_user_search, ContainerJFrame.mni_search_user)) {
            ContainerJFrame.dashboard_quicklink_user_search.setEnabled(true);
            ContainerJFrame.mni_search_user.setEnabled(true);
        } else {
            ContainerJFrame.dashboard_quicklink_user_search.setEnabled(false);
            ContainerJFrame.mni_search_user.setEnabled(false);
        }

        if (isEnable(ContainerJFrame.dashboard_quicklink_role_search, ContainerJFrame.mni_search_role)) {
            ContainerJFrame.dashboard_quicklink_role_search.setEnabled(true);
            ContainerJFrame.mni_search_role.setEnabled(true);
        } else {
            ContainerJFrame.dashboard_quicklink_role_search.setEnabled(false);
            ContainerJFrame.mni_search_role.setEnabled(false);
        }
    }

    public boolean isEnable(JButton jButton, JMenuItem jMenu) {
        for (BioOperations op : userSession.getUserOperationList()) {
            if (op.getOperationName().equals(jButton.getToolTipText())
                    && op.getOperationName().equals(jMenu.getToolTipText())) {
                return true;
            }
        }
        return false;
    }
}
