/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istlbd.gui;

import business.bean.PersonManagerBean;
import business.entity.BioPerson;
import business.entity.Item;
import com.istlbd.utils.Defs;
import com.istlbd.utils.Lookup;
import database.bean.AddressEntityManagerBean;
import database.entity.District;
import database.entity.Upozila;
//import static com.istlbd.gui.ApplicationPanel.cmb_nid_issue_division;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.xswingx.PromptSupport;
import ws.response.GetPersonSummaryResponse;

/**
 *
 * @author Maverick
 */
public class SearchPanel extends javax.swing.JPanel {

    private static ArrayList<BioPerson> tabledata;
    private static DefaultTableModel historyTableModel = null;
    //for pagination
    private static boolean isPaginationInitialized = false;
    private static Integer maximum_record_display_limit = 10; // this shows the record per page
    private static Integer total_segments = 0;
    private static Map<Integer, Integer> segmentMap = null;
    private static Integer current_segment = null;
    private static Integer previous_segment = null;
    private static Integer next_segment = null;
    private static Integer btn_pgn_one_segment = null;
    private static Integer btn_pgn_two_segment = null;
    private static Integer btn_pgn_three_segment = null;

    /**
     * Creates new form SearchPanel
     */
    public SearchPanel() {

        initComponents();

        hidePaginationButtons();
        lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + "0");
        Backup_history_table.getColumnModel().getColumn(7).setMinWidth(0);
        Backup_history_table.getColumnModel().getColumn(7).setMaxWidth(0);
        setDefaultRpp();
        //new class for fonts
        setfonts();
    }
    
    
    
    //this class is for setting the fonts for working in both bengloi and english strings
    public void setfonts(){
        inp_srch_lname_bng .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_fname_bng .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_mname_bng .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_mname_spouse .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_fname_spouse .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_lname_spouse .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_mname_father .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_fname_father .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_lname_father .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_mname_mother .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_lname_mother .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_fname_mother .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_mname_grandfather .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_srch_fname_grandfather .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_perm_village .setFont(new java.awt.Font("Kalpurush", 0, 11));
        inp_pres_village .setFont(new java.awt.Font("Kalpurush", 0, 11));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        srchGenderButtonGroup = new javax.swing.ButtonGroup();
        srchEduButtonGroup = new javax.swing.ButtonGroup();
        search_content_panel = new javax.swing.JPanel();
        inp_search_bar = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        btn_tgl_specific_search = new javax.swing.JToggleButton();
        advance_search_content_panel = new javax.swing.JPanel();
        specific_search_btn_panel = new javax.swing.JPanel();
        btn_advanced_search = new javax.swing.JButton();
        btn_reset_search = new javax.swing.JButton();
        scr_pane_specific_search = new javax.swing.JScrollPane();
        specific_search_base_panel = new javax.swing.JPanel();
        default_search_panel = new javax.swing.JPanel();
        lbl_name_bn = new javax.swing.JLabel();
        inp_srch_lname_bng = new javax.swing.JTextField();
        inp_srch_fname_bng = new javax.swing.JTextField();
        inp_srch_mname_bng = new javax.swing.JTextField();
        lbl_personal_details_header = new javax.swing.JLabel();
        separator_personal_dtls = new javax.swing.JSeparator();
        lbl_gender = new javax.swing.JLabel();
        inp_srch_fname_eng = new javax.swing.JTextField();
        inp_srch_mname_eng = new javax.swing.JTextField();
        inp_srch_lname_eng = new javax.swing.JTextField();
        inp_srch_mname_spouse = new javax.swing.JTextField();
        lbl_name_spouse = new javax.swing.JLabel();
        inp_srch_fname_spouse = new javax.swing.JTextField();
        inp_srch_lname_spouse = new javax.swing.JTextField();
        inp_srch_mname_father = new javax.swing.JTextField();
        inp_srch_fname_father = new javax.swing.JTextField();
        inp_srch_lname_father = new javax.swing.JTextField();
        lbl_name_father = new javax.swing.JLabel();
        inp_srch_mname_mother = new javax.swing.JTextField();
        inp_srch_lname_mother = new javax.swing.JTextField();
        lbl_name_mother = new javax.swing.JLabel();
        inp_srch_fname_mother = new javax.swing.JTextField();
        inp_srch_mname_grandfather = new javax.swing.JTextField();
        inp_srch_fname_grandfather = new javax.swing.JTextField();
        lbl_name_grandfather = new javax.swing.JLabel();
        inp_srch_lname_grandfather = new javax.swing.JTextField();
        lbl_name_en = new javax.swing.JLabel();
        rdo_search_gender_third_gender = new javax.swing.JRadioButton();
        rdo_search_gender_male = new javax.swing.JRadioButton();
        rdo_search_gender_female = new javax.swing.JRadioButton();
        separator_expand = new javax.swing.JSeparator();
        btn_tgl_expand_search = new javax.swing.JToggleButton();
        expanded_search_panel = new javax.swing.JPanel();
        lbl_citizenship_header = new javax.swing.JLabel();
        separator_citizenship = new javax.swing.JSeparator();
        lbl_perm_add_header = new javax.swing.JLabel();
        separator_address = new javax.swing.JSeparator();
        inp_perm_village = new javax.swing.JTextField();
        inp_certificate_no = new javax.swing.JTextField();
        lbl_certificate_no = new javax.swing.JLabel();
        lbl_certificate_issue_date = new javax.swing.JLabel();
        lbl_certi_issue_dist = new javax.swing.JLabel();
        cmb_nid_issue_division = new JComboBox<Item<String>>();
        lbl_perm_village = new javax.swing.JLabel();
        lbl_place_of_birth = new javax.swing.JLabel();
        cmb_present_add_division = new JComboBox<Item<String>>();
        cmb_present_add_district = new javax.swing.JComboBox();
        cmb_present_add_upo = new javax.swing.JComboBox();
        cmb_perm_add_district = new javax.swing.JComboBox();
        cmb_perm_add_upozila = new javax.swing.JComboBox();
        cmb_perm_add_division = new JComboBox<Item<String>>();
        rdo_edu_stat_literate = new javax.swing.JRadioButton();
        lbl_date_of_birth = new javax.swing.JLabel();
        lbl_hadicap_header = new javax.swing.JLabel();
        separator_handicap = new javax.swing.JSeparator();
        chk_srch_handicap_others = new javax.swing.JCheckBox();
        chk_srch_handicap_amputant = new javax.swing.JCheckBox();
        chk_srch_handicap_visual = new javax.swing.JCheckBox();
        chk_srch_handicap_deaf = new javax.swing.JCheckBox();
        chk_srch_handicap_mute = new javax.swing.JCheckBox();
        lbl_misc_header = new javax.swing.JLabel();
        separator_misc = new javax.swing.JSeparator();
        lbl_edu_lang = new javax.swing.JLabel();
        inp_telephone = new javax.swing.JTextField();
        inp_mobile = new javax.swing.JTextField();
        lbl_contact = new javax.swing.JLabel();
        inp_email = new javax.swing.JTextField();
        rdo_edu_stat_illiterate = new javax.swing.JRadioButton();
        chk_srch_handicap_speech = new javax.swing.JCheckBox();
        cmb_education = new javax.swing.JComboBox();
        cmb_religion = new javax.swing.JComboBox();
        inp_tin_no = new javax.swing.JTextField();
        inp_passport = new javax.swing.JTextField();
        inp_driving_license = new javax.swing.JTextField();
        inp_nid_issue_date = new com.toedter.calendar.JDateChooser();
        inp_date_of_birth = new com.toedter.calendar.JDateChooser();
        lbl_pres_village = new javax.swing.JLabel();
        inp_pres_village = new javax.swing.JTextField();
        scr_pane_search_panel_records = new javax.swing.JScrollPane();
        Backup_history_table = new javax.swing.JTable();
        lbl_search_total_records = new javax.swing.JLabel();
        panel_search_pagination = new javax.swing.JPanel();
        btn_search_pgnation_next = new javax.swing.JButton();
        btn_search_pgnation_prev = new javax.swing.JButton();
        btn_search_pgnation_three = new javax.swing.JButton();
        btn_search_pgnation_one = new javax.swing.JButton();
        btn_search_pgnation_two = new javax.swing.JButton();
        cmb_search_rpp = new javax.swing.JComboBox();
        lbl_rpp = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1350, 690));
        setMinimumSize(new java.awt.Dimension(1350, 690));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1350, 690));

        search_content_panel.setBackground(new java.awt.Color(255, 255, 255));
        search_content_panel.setMaximumSize(new java.awt.Dimension(1350, 680));
        search_content_panel.setMinimumSize(new java.awt.Dimension(1350, 680));
        search_content_panel.setOpaque(false);
        search_content_panel.setLayout(null);

        inp_search_bar.setToolTipText("");
        search_content_panel.add(inp_search_bar);
        inp_search_bar.setBounds(150, 30, 975, 30);
        //for search bar
        PromptSupport.setPrompt(Defs.SEARCH_BAR_TEXT, inp_search_bar);
        PromptSupport.setForeground(Color.GRAY, inp_search_bar);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_search_bar);

        btn_search.setBackground(new java.awt.Color(255, 255, 255));
        btn_search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btn_new_search.png"))); // NOI18N
        btn_search.setText("Search");
        btn_search.setToolTipText("");
        btn_search.setIconTextGap(10);
        btn_search.setMaximumSize(new java.awt.Dimension(120, 30));
        btn_search.setMinimumSize(new java.awt.Dimension(120, 30));
        btn_search.setPreferredSize(new java.awt.Dimension(120, 30));
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        search_content_panel.add(btn_search);
        btn_search.setBounds(1180, 30, 120, 30);

        btn_tgl_specific_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/down_rsz.png"))); // NOI18N
        btn_tgl_specific_search.setMaximumSize(new java.awt.Dimension(30, 30));
        btn_tgl_specific_search.setMinimumSize(new java.awt.Dimension(30, 30));
        btn_tgl_specific_search.setPreferredSize(new java.awt.Dimension(30, 30));
        btn_tgl_specific_search.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn_tgl_specific_searchItemStateChanged(evt);
            }
        });
        search_content_panel.add(btn_tgl_specific_search);
        btn_tgl_specific_search.setBounds(1120, 30, 30, 30);

        advance_search_content_panel.setBackground(new java.awt.Color(255, 255, 255));
        advance_search_content_panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        advance_search_content_panel.setMaximumSize(new java.awt.Dimension(1000, 350));
        advance_search_content_panel.setMinimumSize(new java.awt.Dimension(1000, 350));
        advance_search_content_panel.setOpaque(false);
        advance_search_content_panel.setPreferredSize(new java.awt.Dimension(1000, 350));
        advance_search_content_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        specific_search_btn_panel.setBackground(new java.awt.Color(255, 255, 255));
        specific_search_btn_panel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        specific_search_btn_panel.setMaximumSize(new java.awt.Dimension(996, 35));
        specific_search_btn_panel.setMinimumSize(new java.awt.Dimension(996, 35));
        specific_search_btn_panel.setOpaque(false);
        specific_search_btn_panel.setPreferredSize(new java.awt.Dimension(996, 35));
        specific_search_btn_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_advanced_search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_advanced_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/b_search.png"))); // NOI18N
        btn_advanced_search.setText("Search");
        btn_advanced_search.setIconTextGap(10);
        btn_advanced_search.setMaximumSize(new java.awt.Dimension(120, 30));
        btn_advanced_search.setMinimumSize(new java.awt.Dimension(120, 30));
        btn_advanced_search.setPreferredSize(new java.awt.Dimension(120, 30));
        btn_advanced_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_advanced_searchActionPerformed(evt);
            }
        });
        specific_search_btn_panel.add(btn_advanced_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(865, 3, 120, 30));

        btn_reset_search.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_reset_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/b_reset_80.png"))); // NOI18N
        btn_reset_search.setText("Reset");
        btn_reset_search.setIconTextGap(10);
        btn_reset_search.setMaximumSize(new java.awt.Dimension(120, 30));
        btn_reset_search.setMinimumSize(new java.awt.Dimension(120, 30));
        btn_reset_search.setPreferredSize(new java.awt.Dimension(120, 30));
        btn_reset_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reset_searchActionPerformed(evt);
            }
        });
        specific_search_btn_panel.add(btn_reset_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 3, 120, 30));

        advance_search_content_panel.add(specific_search_btn_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 313, 996, 35));

        scr_pane_specific_search.setBackground(new java.awt.Color(204, 204, 204));
        scr_pane_specific_search.setBorder(null);
        scr_pane_specific_search.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scr_pane_specific_search.setMaximumSize(new java.awt.Dimension(996, 310));
        scr_pane_specific_search.setMinimumSize(new java.awt.Dimension(996, 310));
        scr_pane_specific_search.setOpaque(false);
        scr_pane_specific_search.setPreferredSize(new java.awt.Dimension(996, 310));

        specific_search_base_panel.setMaximumSize(new java.awt.Dimension(996, 720));
        specific_search_base_panel.setMinimumSize(new java.awt.Dimension(996, 720));
        specific_search_base_panel.setPreferredSize(new java.awt.Dimension(996, 720));
        specific_search_base_panel.setLayout(null);

        default_search_panel.setBackground(new java.awt.Color(255, 255, 204));
        default_search_panel.setMaximumSize(new java.awt.Dimension(996, 310));
        default_search_panel.setMinimumSize(new java.awt.Dimension(996, 310));
        default_search_panel.setOpaque(false);
        default_search_panel.setPreferredSize(new java.awt.Dimension(996, 310));
        default_search_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_name_bn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_bn.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_bn.setText("Name in Bengali");
        lbl_name_bn.setToolTipText("");
        default_search_panel.add(lbl_name_bn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 150, 25));

        inp_srch_lname_bng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_bng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_bng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_bng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_bng, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 40, 250, 25));

        inp_srch_fname_bng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_bng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_bng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_bng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_bng, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 250, 25));

        inp_srch_mname_bng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_bng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_bng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_bng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_bng, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 250, 25));

        lbl_personal_details_header.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_personal_details_header.setForeground(new java.awt.Color(51, 153, 255));
        lbl_personal_details_header.setText("PERSONAL DETAILS");
        lbl_personal_details_header.setMaximumSize(new java.awt.Dimension(100, 20));
        lbl_personal_details_header.setMinimumSize(new java.awt.Dimension(100, 20));
        lbl_personal_details_header.setPreferredSize(new java.awt.Dimension(100, 20));
        default_search_panel.add(lbl_personal_details_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 150, 20));

        separator_personal_dtls.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        default_search_panel.add(separator_personal_dtls, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 27, 950, -1));

        lbl_gender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_gender.setForeground(new java.awt.Color(102, 102, 102));
        lbl_gender.setText("Gender");
        lbl_gender.setToolTipText("");
        default_search_panel.add(lbl_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 150, 25));

        inp_srch_fname_eng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_eng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_eng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_eng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_eng, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 250, 25));

        inp_srch_mname_eng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_eng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_eng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_eng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_eng, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 250, 25));

        inp_srch_lname_eng.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_eng.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_eng.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_eng.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_eng, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 70, 250, 25));

        inp_srch_mname_spouse.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_spouse.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_spouse.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_spouse.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_spouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 250, 25));

        lbl_name_spouse.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_spouse.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_spouse.setText("Spouse's Name");
        lbl_name_spouse.setToolTipText("");
        default_search_panel.add(lbl_name_spouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 150, 25));

        inp_srch_fname_spouse.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_spouse.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_spouse.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_spouse.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_spouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 250, 25));

        inp_srch_lname_spouse.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_spouse.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_spouse.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_spouse.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_spouse, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 250, 25));

        inp_srch_mname_father.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_father.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_father.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_father.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_father, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 160, 250, 25));

        inp_srch_fname_father.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_father.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_father.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_father.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_father, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 250, 25));

        inp_srch_lname_father.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_father.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_father.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_father.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_father, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 160, 250, 25));

        lbl_name_father.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_father.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_father.setText("Father's Name");
        lbl_name_father.setToolTipText("");
        default_search_panel.add(lbl_name_father, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 150, 25));

        inp_srch_mname_mother.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_mother.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_mother.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_mother.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_mother, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 250, 25));

        inp_srch_lname_mother.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_mother.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_mother.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_mother.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_mother, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, 250, 25));

        lbl_name_mother.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_mother.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_mother.setText("Mother's Name");
        lbl_name_mother.setToolTipText("");
        default_search_panel.add(lbl_name_mother, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 150, 25));

        inp_srch_fname_mother.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_mother.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_mother.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_mother.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_mother, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 250, 25));

        inp_srch_mname_grandfather.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_mname_grandfather.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_grandfather.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_mname_grandfather.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_mname_grandfather, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 250, 25));

        inp_srch_fname_grandfather.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_fname_grandfather.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_grandfather.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_fname_grandfather.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_fname_grandfather, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 250, 25));

        lbl_name_grandfather.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_grandfather.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_grandfather.setText("Grandfather's Name");
        lbl_name_grandfather.setToolTipText("");
        default_search_panel.add(lbl_name_grandfather, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 150, 25));

        inp_srch_lname_grandfather.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        inp_srch_lname_grandfather.setMaximumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_grandfather.setMinimumSize(new java.awt.Dimension(200, 25));
        inp_srch_lname_grandfather.setPreferredSize(new java.awt.Dimension(200, 25));
        default_search_panel.add(inp_srch_lname_grandfather, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 220, 250, 25));

        lbl_name_en.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_name_en.setForeground(new java.awt.Color(102, 102, 102));
        lbl_name_en.setText("Name in English");
        lbl_name_en.setToolTipText("");
        default_search_panel.add(lbl_name_en, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 150, 25));

        srchGenderButtonGroup.add(rdo_search_gender_third_gender);
        rdo_search_gender_third_gender.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdo_search_gender_third_gender.setForeground(new java.awt.Color(102, 102, 102));
        rdo_search_gender_third_gender.setText("Third Gender");
        default_search_panel.add(rdo_search_gender_third_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 250, -1));

        srchGenderButtonGroup.add(rdo_search_gender_male);
        rdo_search_gender_male.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdo_search_gender_male.setForeground(new java.awt.Color(102, 102, 102));
        rdo_search_gender_male.setText("Male");
        default_search_panel.add(rdo_search_gender_male, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 250, -1));

        srchGenderButtonGroup.add(rdo_search_gender_female);
        rdo_search_gender_female.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rdo_search_gender_female.setForeground(new java.awt.Color(102, 102, 102));
        rdo_search_gender_female.setText("Female");
        default_search_panel.add(rdo_search_gender_female, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 250, -1));

        separator_expand.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        default_search_panel.add(separator_expand, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 950, -1));

        btn_tgl_expand_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/down_rsz.png"))); // NOI18N
        btn_tgl_expand_search.setText("More");
        btn_tgl_expand_search.setIconTextGap(10);
        btn_tgl_expand_search.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                btn_tgl_expand_searchItemStateChanged(evt);
            }
        });
        default_search_panel.add(btn_tgl_expand_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 255, 100, 20));

        specific_search_base_panel.add(default_search_panel);
        default_search_panel.setBounds(0, 0, 996, 310);

        expanded_search_panel.setBackground(new java.awt.Color(255, 255, 255));
        expanded_search_panel.setMaximumSize(new java.awt.Dimension(996, 415));
        expanded_search_panel.setMinimumSize(new java.awt.Dimension(996, 415));
        expanded_search_panel.setOpaque(false);
        expanded_search_panel.setPreferredSize(new java.awt.Dimension(996, 415));
        expanded_search_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_citizenship_header.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_citizenship_header.setForeground(new java.awt.Color(51, 153, 255));
        lbl_citizenship_header.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_citizenship_header.setText("CITIZENSHIP DETAILS");
        expanded_search_panel.add(lbl_citizenship_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 958, -1));

        separator_citizenship.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        expanded_search_panel.add(separator_citizenship, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 22, 950, -1));

        lbl_perm_add_header.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_perm_add_header.setForeground(new java.awt.Color(51, 153, 255));
        lbl_perm_add_header.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_perm_add_header.setText("PERMANENT ADDRESS (All Fields except Village/Tole are mandatory )");
        expanded_search_panel.add(lbl_perm_add_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 950, -1));

        separator_address.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        expanded_search_panel.add(separator_address, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 162, 950, -1));

        inp_perm_village.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_perm_village, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 650, 25));

        inp_certificate_no.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_certificate_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 250, 25));

        lbl_certificate_no.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_certificate_no.setForeground(new java.awt.Color(102, 102, 102));
        lbl_certificate_no.setText("National Id");
        expanded_search_panel.add(lbl_certificate_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 25));

        lbl_certificate_issue_date.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_certificate_issue_date.setForeground(new java.awt.Color(102, 102, 102));
        lbl_certificate_issue_date.setText("Nid Issue Date");
        expanded_search_panel.add(lbl_certificate_issue_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, 100, 25));

        lbl_certi_issue_dist.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_certi_issue_dist.setForeground(new java.awt.Color(102, 102, 102));
        lbl_certi_issue_dist.setText("Nid Issue Division");
        expanded_search_panel.add(lbl_certi_issue_dist, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 150, 25));

        cmb_nid_issue_division.setForeground(new java.awt.Color(102, 102, 102));
        cmb_nid_issue_division.setMaximumRowCount(10);
        expanded_search_panel.add(cmb_nid_issue_division, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 250, 25));

        lbl_perm_village.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_perm_village.setForeground(new java.awt.Color(102, 102, 102));
        lbl_perm_village.setText("Village/Street");
        expanded_search_panel.add(lbl_perm_village, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 110, 25));

        lbl_place_of_birth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_place_of_birth.setForeground(new java.awt.Color(102, 102, 102));
        lbl_place_of_birth.setText("Present Address");
        expanded_search_panel.add(lbl_place_of_birth, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 150, 25));

        cmb_present_add_division.setForeground(new java.awt.Color(102, 102, 102));
        cmb_present_add_division.setMaximumRowCount(10);
        cmb_present_add_division.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_present_add_divisionItemStateChanged(evt);
            }
        });
        expanded_search_panel.add(cmb_present_add_division, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 250, 25));

        cmb_present_add_district.setForeground(new java.awt.Color(102, 102, 102));
        cmb_present_add_district.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_present_add_districtItemStateChanged(evt);
            }
        });
        expanded_search_panel.add(cmb_present_add_district, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 250, 25));

        cmb_present_add_upo.setForeground(new java.awt.Color(102, 102, 102));
        expanded_search_panel.add(cmb_present_add_upo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 250, 25));

        cmb_perm_add_district.setForeground(new java.awt.Color(102, 102, 102));
        cmb_perm_add_district.setMaximumRowCount(10);
        cmb_perm_add_district.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_perm_add_districtItemStateChanged(evt);
            }
        });
        expanded_search_panel.add(cmb_perm_add_district, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 250, 25));

        cmb_perm_add_upozila.setForeground(new java.awt.Color(102, 102, 102));
        cmb_perm_add_upozila.setMaximumRowCount(10);
        expanded_search_panel.add(cmb_perm_add_upozila, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 250, 25));

        cmb_perm_add_division.setForeground(new java.awt.Color(102, 102, 102));
        cmb_perm_add_division.setMaximumRowCount(10);
        cmb_perm_add_division.setToolTipText("");
        cmb_perm_add_division.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_perm_add_divisionItemStateChanged(evt);
            }
        });
        expanded_search_panel.add(cmb_perm_add_division, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 250, 25));

        srchEduButtonGroup.add(rdo_edu_stat_literate);
        rdo_edu_stat_literate.setForeground(new java.awt.Color(102, 102, 102));
        rdo_edu_stat_literate.setText("Literate");
        expanded_search_panel.add(rdo_edu_stat_literate, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, 120, 25));

        lbl_date_of_birth.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_date_of_birth.setForeground(new java.awt.Color(102, 102, 102));
        lbl_date_of_birth.setText("Date of Birth (BS)");
        expanded_search_panel.add(lbl_date_of_birth, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, 100, 25));

        lbl_hadicap_header.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_hadicap_header.setForeground(new java.awt.Color(51, 153, 255));
        lbl_hadicap_header.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_hadicap_header.setText("HANDICAP DETAILS");
        expanded_search_panel.add(lbl_hadicap_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 950, -1));

        separator_handicap.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        expanded_search_panel.add(separator_handicap, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 242, 950, -1));

        chk_srch_handicap_others.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_others.setText("Others (Mention)");
        expanded_search_panel.add(chk_srch_handicap_others, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, -1, 25));

        chk_srch_handicap_amputant.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_amputant.setText("Both Limbs Amputated");
        expanded_search_panel.add(chk_srch_handicap_amputant, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, -1, 25));

        chk_srch_handicap_visual.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_visual.setText("Visually Impaired");
        expanded_search_panel.add(chk_srch_handicap_visual, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, 25));

        chk_srch_handicap_deaf.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_deaf.setText("Deaf");
        expanded_search_panel.add(chk_srch_handicap_deaf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, -1, 25));

        chk_srch_handicap_mute.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_mute.setText("Can not Talk");
        expanded_search_panel.add(chk_srch_handicap_mute, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, -1, 25));

        lbl_misc_header.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_misc_header.setForeground(new java.awt.Color(51, 153, 255));
        lbl_misc_header.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbl_misc_header.setText("MISCELLANEOUS");
        expanded_search_panel.add(lbl_misc_header, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 950, -1));

        separator_misc.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        expanded_search_panel.add(separator_misc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 312, 950, -1));

        lbl_edu_lang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_edu_lang.setForeground(new java.awt.Color(102, 102, 102));
        lbl_edu_lang.setText("Education / Language");
        expanded_search_panel.add(lbl_edu_lang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 150, 25));

        inp_telephone.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 350, 250, 25));

        inp_mobile.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 250, 25));

        lbl_contact.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_contact.setForeground(new java.awt.Color(102, 102, 102));
        lbl_contact.setText("Contacts");
        expanded_search_panel.add(lbl_contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 150, 25));

        inp_email.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 350, 250, 25));

        srchEduButtonGroup.add(rdo_edu_stat_illiterate);
        rdo_edu_stat_illiterate.setForeground(new java.awt.Color(102, 102, 102));
        rdo_edu_stat_illiterate.setText("Illiterate");
        expanded_search_panel.add(rdo_edu_stat_illiterate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 110, 25));

        chk_srch_handicap_speech.setForeground(new java.awt.Color(102, 102, 102));
        chk_srch_handicap_speech.setText("Speech Impaired");
        expanded_search_panel.add(chk_srch_handicap_speech, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 250, -1, 25));

        cmb_education.setForeground(new java.awt.Color(102, 102, 102));
        expanded_search_panel.add(cmb_education, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 250, 25));

        cmb_religion.setForeground(new java.awt.Color(102, 102, 102));
        expanded_search_panel.add(cmb_religion, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 320, 250, 25));

        inp_tin_no.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_tin_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 380, 250, 25));

        inp_passport.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_passport, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 380, 250, 25));

        inp_driving_license.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_driving_license, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 250, 25));

        inp_nid_issue_date.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_nid_issue_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, 130, 25));

        inp_date_of_birth.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1)));
        expanded_search_panel.add(inp_date_of_birth, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 130, 25));

        lbl_pres_village.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_pres_village.setForeground(new java.awt.Color(102, 102, 102));
        lbl_pres_village.setText("Village/Street");
        expanded_search_panel.add(lbl_pres_village, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 110, 25));

        inp_pres_village.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 1))));
        expanded_search_panel.add(inp_pres_village, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 650, 25));

        specific_search_base_panel.add(expanded_search_panel);
        expanded_search_panel.setBounds(0, 300, 996, 415);

        scr_pane_specific_search.setViewportView(specific_search_base_panel);

        advance_search_content_panel.add(scr_pane_specific_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 996, 310));

        search_content_panel.add(advance_search_content_panel);
        advance_search_content_panel.setBounds(150, 60, 1000, 350);

        scr_pane_search_panel_records.setMaximumSize(new java.awt.Dimension(1290, 420));
        scr_pane_search_panel_records.setMinimumSize(new java.awt.Dimension(1290, 420));
        scr_pane_search_panel_records.setOpaque(false);
        scr_pane_search_panel_records.setPreferredSize(new java.awt.Dimension(1290, 420));

        Backup_history_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PIN", "First Name", "Last Name", "Gender", "Date of Birth", "Email", "View", "Id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Backup_history_table.setOpaque(false);
        Backup_history_table.setRowHeight(25);
        Backup_history_table.getTableHeader().setReorderingAllowed(false);
        scr_pane_search_panel_records.setViewportView(Backup_history_table);

        search_content_panel.add(scr_pane_search_panel_records);
        scr_pane_search_panel_records.setBounds(30, 120, 1290, 420);

        lbl_search_total_records.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        search_content_panel.add(lbl_search_total_records);
        lbl_search_total_records.setBounds(30, 90, 500, 30);

        panel_search_pagination.setOpaque(false);
        panel_search_pagination.setLayout(null);

        btn_search_pgnation_next.setBackground(new java.awt.Color(255, 255, 255));
        btn_search_pgnation_next.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_next.setText("Next");
        btn_search_pgnation_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_nextActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_next);
        btn_search_pgnation_next.setBounds(240, 5, 70, 30);

        btn_search_pgnation_prev.setBackground(new java.awt.Color(255, 255, 255));
        btn_search_pgnation_prev.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_prev.setText("Prev");
        btn_search_pgnation_prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_prevActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_prev);
        btn_search_pgnation_prev.setBounds(10, 5, 70, 30);

        btn_search_pgnation_three.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_three.setText("3");
        btn_search_pgnation_three.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_threeActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_three);
        btn_search_pgnation_three.setBounds(190, 5, 40, 30);

        btn_search_pgnation_one.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_one.setText("1");
        btn_search_pgnation_one.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_oneActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_one);
        btn_search_pgnation_one.setBounds(90, 5, 40, 30);

        btn_search_pgnation_two.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_search_pgnation_two.setText("2");
        btn_search_pgnation_two.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btn_search_pgnation_two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_search_pgnation_twoActionPerformed(evt);
            }
        });
        panel_search_pagination.add(btn_search_pgnation_two);
        btn_search_pgnation_two.setBounds(140, 5, 40, 30);

        search_content_panel.add(panel_search_pagination);
        panel_search_pagination.setBounds(1000, 550, 320, 40);

        cmb_search_rpp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_search_rpp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_search_rppItemStateChanged(evt);
            }
        });
        search_content_panel.add(cmb_search_rpp);
        cmb_search_rpp.setBounds(1270, 90, 50, 25);

        lbl_rpp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_rpp.setText("Records per page :");
        search_content_panel.add(lbl_rpp);
        lbl_rpp.setBounds(1154, 90, 115, 25);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1350, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(search_content_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 1350, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(search_content_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 76, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_tgl_specific_searchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn_tgl_specific_searchItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            initializeSearchView();
            btn_tgl_expand_search.setSelected(false);
            btn_tgl_specific_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/up_rsz.png"))); // NOI18N
            advance_search_content_panel.setVisible(true);

        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {

            btn_tgl_specific_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/down_rsz.png"))); // NOI18N
            advance_search_content_panel.setVisible(false);
        }

    }//GEN-LAST:event_btn_tgl_specific_searchItemStateChanged

    private void btn_tgl_expand_searchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_btn_tgl_expand_searchItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {

            advance_search_content_panel.setSize(new Dimension(1000, 400));
            specific_search_btn_panel.setBounds(2, 363, 996, 35);
            scr_pane_specific_search.setBounds(2, 2, 996, 360);
            specific_search_base_panel.setPreferredSize(new Dimension(996, 710));
            expanded_search_panel.setVisible(true);

            btn_tgl_expand_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/up_rsz.png"))); // NOI18N
            btn_tgl_expand_search.setText("Less");

        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {

            initializeSearchView();

        }
    }//GEN-LAST:event_btn_tgl_expand_searchItemStateChanged

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed

        executeUserSearchReq(true);

    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_advanced_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_advanced_searchActionPerformed

        executeUserSearchReq(false);

    }//GEN-LAST:event_btn_advanced_searchActionPerformed

    private void cmb_present_add_divisionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_present_add_divisionItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            AddressEntityManagerBean aem;
            String value = null;
            try {
                value = (((Item) cmb_present_add_division.getSelectedItem()).getValue().toString());
            } catch (Exception ex) {
            }
            if (value != null && !value.isEmpty()) {
                aem = new AddressEntityManagerBean();
                List<District> districts = aem.getDistrictFindByDivisionId(Integer.parseInt(value));


                cmb_present_add_district.removeAllItems();
                cmb_present_add_district.addItem(new Item<String>("", "District"));

                int cnt = 0;
                int selectedIndx = 0;

                for (District dc : districts) {
                    ++cnt;
                    cmb_present_add_district.addItem(new Item<String>(dc.getId(), dc.getNameEn()));

                }

            } else {
                cmb_present_add_district.removeAllItems();
                cmb_present_add_district.addItem(new Item<String>("", "District"));
            }
        }

    }//GEN-LAST:event_cmb_present_add_divisionItemStateChanged

    private void cmb_present_add_districtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_present_add_districtItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            AddressEntityManagerBean aem;
            String value = null;
            try {
                value = (((Item) cmb_present_add_district.getSelectedItem()).getValue().toString());
            } catch (Exception ex) {
            }
            if (value != null && !value.isEmpty()) {
                aem = new AddressEntityManagerBean();
                List<Upozila> upozilas = aem.getUpozilaFindByDistrictId(Integer.parseInt(value));

                cmb_present_add_upo.removeAllItems();
                cmb_present_add_upo.addItem(new Item<String>("", "Upozila"));
                for (Upozila uz : upozilas) {
                    cmb_present_add_upo.addItem(new Item<String>(uz.getId(), uz.getNameEn()));
                }

            } else {
                cmb_present_add_upo.removeAllItems();
                cmb_present_add_upo.addItem(new Item<String>("", "Upozila"));
            }
        }

    }//GEN-LAST:event_cmb_present_add_districtItemStateChanged

    private void cmb_perm_add_divisionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_perm_add_divisionItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            AddressEntityManagerBean aem;
            String value = null;
            try {
                value = (((Item) cmb_perm_add_division.getSelectedItem()).getValue().toString());
            } catch (Exception ex) {
            }
            if (value != null && !value.isEmpty()) {
                aem = new AddressEntityManagerBean();
                List<District> districts = aem.getDistrictFindByDivisionId(Integer.parseInt(value));


                cmb_perm_add_district.removeAllItems();
                cmb_perm_add_district.addItem(new Item<String>("", "District"));

                int cnt = 0;
                int selectedIndx = 0;

                for (District dc : districts) {
                    ++cnt;
                    cmb_perm_add_district.addItem(new Item<String>(dc.getId(), dc.getNameEn()));
                }

            } else {
                
                cmb_perm_add_district.removeAllItems();
                cmb_perm_add_district.addItem(new Item<String>("", "District"));
                
            }
        }

    }//GEN-LAST:event_cmb_perm_add_divisionItemStateChanged

    private void cmb_perm_add_districtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_perm_add_districtItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
//            System.out.println("district:" + System.currentTimeMillis());
            AddressEntityManagerBean aem;
            String value = null;
            try {
                value = (((Item) cmb_perm_add_district.getSelectedItem()).getValue().toString());
            } catch (Exception ex) {
            }
            if (value != null && !value.isEmpty()) {
                aem = new AddressEntityManagerBean();
                List<Upozila> upozilas = aem.getUpozilaFindByDistrictId(Integer.parseInt(value));

                cmb_perm_add_upozila.removeAllItems();
                cmb_perm_add_upozila.addItem(new Item<String>("", "Upozila"));
                for (Upozila uz : upozilas) {
                    cmb_perm_add_upozila.addItem(new Item<String>(uz.getId(), uz.getNameEn()));
                }

            } else {
                cmb_perm_add_upozila.removeAllItems();
                cmb_perm_add_upozila.addItem(new Item<String>("", "Upozila"));
            }
        }

    }//GEN-LAST:event_cmb_perm_add_districtItemStateChanged

    private void btn_reset_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reset_searchActionPerformed

        resetSearchPanel();

    }//GEN-LAST:event_btn_reset_searchActionPerformed

    private void btn_search_pgnation_prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_prevActionPerformed

        generateBackupHistoryList(previous_segment);

    }//GEN-LAST:event_btn_search_pgnation_prevActionPerformed

    private void btn_search_pgnation_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_nextActionPerformed

        generateBackupHistoryList(next_segment);

    }//GEN-LAST:event_btn_search_pgnation_nextActionPerformed

    private void btn_search_pgnation_oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_oneActionPerformed

        generateBackupHistoryList(btn_pgn_one_segment);

    }//GEN-LAST:event_btn_search_pgnation_oneActionPerformed

    private void btn_search_pgnation_twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_twoActionPerformed

        generateBackupHistoryList(btn_pgn_two_segment);

    }//GEN-LAST:event_btn_search_pgnation_twoActionPerformed

    private void btn_search_pgnation_threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_search_pgnation_threeActionPerformed

        generateBackupHistoryList(btn_pgn_three_segment);

    }//GEN-LAST:event_btn_search_pgnation_threeActionPerformed

    private void cmb_search_rppItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_search_rppItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            String value = (((Item) cmb_search_rpp.getSelectedItem()).getValue().toString());
            Integer rpp = Integer.parseInt(value);
            
            if(value != null && rpp != maximum_record_display_limit){
            
                maximum_record_display_limit = rpp;
                isPaginationInitialized = false;
                generateBackupHistoryList(1);
                
            }
        }

    }//GEN-LAST:event_cmb_search_rppItemStateChanged

    private void executeUserSearchReq(boolean isQuickSearch) {

        btn_tgl_specific_search.setSelected(false);
        
        // initialize the object for search
        PersonManagerBean pmb = new PersonManagerBean();
        BioPerson person = new BioPerson();
        String quickSearchText = null;

        if (isQuickSearch) {
            quickSearchText = inp_search_bar.getText();
        } else {

            // setting the selected data.
            //Bangla Name
            person.setFirstNameBn(inp_srch_fname_bng.getText());
            person.setMiddleNameBn(inp_srch_mname_bng.getText());
            person.setLastNameBn(inp_srch_lname_bng.getText());

            //English Name
            person.setFirstName(inp_srch_fname_eng.getText());
            person.setMiddleName(inp_srch_mname_eng.getText());
            person.setLastName(inp_srch_lname_eng.getText());

            //Gender
            String selectedGender = "";
            if (rdo_search_gender_third_gender.isSelected()) {
                selectedGender = Defs.GENDER_THIRD;
            } else if (rdo_search_gender_female.isSelected()) {
                selectedGender = Defs.GENDER_FEMALE;
            } else if(rdo_search_gender_male.isSelected()){
                selectedGender = Defs.GENDER_MALE;
            }
            
            person.setGender(selectedGender);

            //Spouse
            person.setSpouseFirstName(inp_srch_fname_spouse.getText());
            person.setSpouseMiddleName(inp_srch_mname_spouse.getText());
            person.setSpouseLastName(inp_srch_lname_spouse.getText());

            //Father
            person.setFatherFirstName(inp_srch_fname_father.getText());
            person.setFatherMiddleName(inp_srch_mname_father.getText());
            person.setFatherLastName(inp_srch_lname_father.getText());

            //Mother
            person.setMotherFirstName(inp_srch_fname_mother.getText());
            person.setMotherMiddleName(inp_srch_mname_mother.getText());
            person.setMotherLastName(inp_srch_lname_mother.getText());

            //GrandFather
            person.setGrandFatherFirstName(inp_srch_fname_grandfather.getText());
            person.setGrandFatherMiddleName(inp_srch_mname_grandfather.getText());
            person.setGrandFatherLastName(inp_srch_lname_grandfather.getText());

            //Pin
            person.setPinNo(inp_certificate_no.getText());

            //nid issue date
            String nidIssueDate = null;
            try {
                nidIssueDate = Defs.SDF.format(inp_nid_issue_date.getDate());
            } catch (Exception ex) {
            }
            person.setNidIssueDate(nidIssueDate);

            //nid issue division
            String nidIssueDivision = ((Item) cmb_nid_issue_division.getSelectedItem()).getValue().toString();
            person.setNidIssueDivision(nidIssueDivision);

            //date of birth
            String dob = null;
            try {
                dob = Defs.SDF.format(inp_date_of_birth.getDate());
            } catch (Exception ex) {
            }
            person.setDateOfBirth(dob);

            //present division
            String presentAddDivision = ((Item) cmb_present_add_division.getSelectedItem()).getValue().toString();
            person.setPresentDivision(presentAddDivision);

            //present district
            String presentAddDistrict = ((Item) cmb_present_add_district.getSelectedItem()).getValue().toString();
            person.setPresentDistrict(presentAddDistrict);

            //present upozila
            String presentAddUpozila = ((Item) cmb_present_add_upo.getSelectedItem()).getValue().toString();
            person.setPresentUpozila(presentAddUpozila);
            System.out.println("presentAddUpozila: "+presentAddUpozila);

            //present village
            person.setPresentStreet(inp_pres_village.getText());

            //permanent division
            String permanentAddDivision = ((Item) cmb_perm_add_division.getSelectedItem()).getValue().toString();
            person.setPermDivision(permanentAddDivision);

            //permanent district
            String permanentAddDistrict = ((Item) cmb_perm_add_district.getSelectedItem()).getValue().toString();
            person.setPermDistrict(permanentAddDistrict);

            //permanent upozila
            String permanentAddUpozila = ((Item) cmb_perm_add_upozila.getSelectedItem()).getValue().toString();
            person.setPermUpozila(permanentAddUpozila);

            //permanent village
            person.setPermStreet(inp_perm_village.getText());

            //handicap
            String handiCapListStr = "";
            List<String> handiList = new ArrayList<String>();

            if (chk_srch_handicap_amputant.isSelected()) {
                handiList.add("amputent");
            }
            if (chk_srch_handicap_deaf.isSelected()) {
                handiList.add("deaf");
            }
            if (chk_srch_handicap_mute.isSelected()) {
                handiList.add("mute");
            }
            if (chk_srch_handicap_others.isSelected()) {
                handiList.add("others");
            }
            if (chk_srch_handicap_speech.isSelected()) {
                handiList.add("speech");
            }
            if (chk_srch_handicap_visual.isSelected()) {
                handiList.add("visual");
            }

            if (handiList.size() > 0) {
                handiCapListStr = handiList.get(0);
            }
            for (int i = 1; i < handiList.size(); i++) {
                handiCapListStr += "," + handiList.get(i);
            }
            
            //new code for handicapped
            person.setHandicapInfo(handiCapListStr);

            //education
            String edu;
            if (rdo_edu_stat_illiterate.isSelected()) {
                edu = Lookup.ILLITERATE;
            } else if (rdo_edu_stat_literate.isSelected()) {
                edu = Lookup.EDUCATED;
            } else {
                edu = "";
            }
            person.setEducated(edu);

            //education level
            String eduLevel = "";
            try {
                eduLevel = ((Item) cmb_education.getSelectedItem()).getValue().toString();
            } catch (Exception ex) {
            }
            person.setEducationLevel(eduLevel);

            //religion
            String religion = "";
            try {
                religion = ((Item) cmb_religion.getSelectedItem()).getValue().toString();
            } catch (Exception ex) {
            }
            person.setReligion(religion);

            //telephone
            person.setPhone(inp_telephone.getText());

            //mobile
            person.setMobile(inp_mobile.getText());

            //email
            person.setEmail(inp_email.getText());

            //tin
            person.setTin(inp_tin_no.getText());

            //passport
            person.setPassport(inp_passport.getText());

            //driving license
            person.setDlNumber(inp_driving_license.getText());
        }

        GetPersonSummaryResponse resp = new GetPersonSummaryResponse();
        if (!isQuickSearch) {
            resp = pmb.getAdvancedSearchPersonInfo(0L, 1000L, person);
        } else {
            resp = pmb.getIntelisenseSearchPersonInfo(0L, 1000L, quickSearchText);
        }
        if (resp != null && resp.isOperationStatus() && resp.getPersonList() != null && resp.getPersonList().size() > 0) {

            lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + resp.getTotalResult());

            if (tabledata == null) {
                tabledata = new ArrayList<BioPerson>();
            }
            tabledata.clear();
            tabledata.addAll(resp.getPersonList());
        } else {

            lbl_search_total_records.setText(Defs.SEARCH_TOTAL_RECORDS_TITLE + "0");
            if (tabledata != null) {
                tabledata.clear();
            }
        }

        isPaginationInitialized = false;
        generateBackupHistoryList(1);

    }

//    private void generateBackupHistoryList() {
//
//        if (historyTableModel == null) {
//            historyTableModel = (DefaultTableModel) Backup_history_table.getModel();
//        }
//
//        if (tabledata == null) {
//
//            System.out.println("Not content in backup arraylist");
//            historyTableModel.setRowCount(0);
//            return;
//        }
//
//        historyTableModel.setRowCount(0);
//
//        //set header alignment
//        DefaultTableCellRenderer centerRenderer_h = new DefaultTableCellRenderer();
//        centerRenderer_h = (DefaultTableCellRenderer) Backup_history_table.getTableHeader().getDefaultRenderer();
//        centerRenderer_h.setHorizontalAlignment(javax.swing.JLabel.CENTER);
//
//        //set data alignment
//        DefaultTableCellRenderer centerRenderer_c = new DefaultTableCellRenderer();
//        centerRenderer_c.setHorizontalAlignment(javax.swing.JLabel.CENTER);
//
//        for (int i = 0; i < Backup_history_table.getColumnCount(); i++) {
//
//            Backup_history_table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer_c);
//
//        }
//        if (tabledata != null) {
//            
//            //populate table data
//            for (int t = 0; t < tabledata.size(); t++) {
//                //set row height
//                Backup_history_table.setRowHeight(25);
//
//                Backup_history_table.getColumn("View").setCellRenderer(new ButtonRenderer());
//                Backup_history_table.getColumn("View").setCellEditor(new ButtonEditor(new JCheckBox()));
//
//                Object[] row = {tabledata.get(t).getPinNo(), tabledata.get(t).getFirstName(), tabledata.get(t).getLastName(), tabledata.get(t).getGender(), tabledata.get(t).getDateOfBirth(), tabledata.get(t).getEmail(), "View", tabledata.get(t).getId().toString()};
//                historyTableModel.addRow(row);
//            }
//        }
//
//    }
    private void generateBackupHistoryList(Integer segment) {

        if (historyTableModel == null) {
            historyTableModel = (DefaultTableModel) Backup_history_table.getModel();
        }

        if (tabledata == null) {

//            System.out.println("Not content in backup arraylist");
            historyTableModel.setRowCount(0);
            return;
        }

        historyTableModel.setRowCount(0);

        //set header alignment
        DefaultTableCellRenderer centerRenderer_h = new DefaultTableCellRenderer();
        centerRenderer_h = (DefaultTableCellRenderer) Backup_history_table.getTableHeader().getDefaultRenderer();
        centerRenderer_h.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        centerRenderer_h.setBackground(new Color(239, 198, 46));
        centerRenderer_h.setOpaque(true);

        //set data alignment
        DefaultTableCellRenderer centerRenderer_c = new DefaultTableCellRenderer();
        centerRenderer_c.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < Backup_history_table.getColumnCount(); i++) {

            Backup_history_table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer_c);

        }
        if (tabledata != null) {

            int start_index = 0;
            //------------------------------------------------ pagination start ------------------------------------

            if (tabledata.size() <= maximum_record_display_limit) {

                hidePaginationButtons();

            } else {

                if (!isPaginationInitialized) {
                    createPaginationSegments();
                }

                start_index = segmentMap.get(segment);

                //setting current selected segment
                current_segment = segment;
                configurePaginationButtons();

            }

            //------------------------------------------------ pagination end --------------------------------------

            //populate table data
            for (int t = 0; t < maximum_record_display_limit; t++) {

                //check for pagination
                if (start_index == tabledata.size()) {
                    break;
                }

                //set row height
                Backup_history_table.setRowHeight(25);

                Backup_history_table.getColumn("View").setCellRenderer(new ButtonRenderer());
                Backup_history_table.getColumn("View").setCellEditor(new ButtonEditor(new JCheckBox()));

                Object[] row = {tabledata.get(start_index).getPinNo(), tabledata.get(start_index).getFirstName(), tabledata.get(start_index).getLastName(), tabledata.get(start_index).getGender(), tabledata.get(start_index).getDateOfBirth(), tabledata.get(start_index).getEmail(), "View", tabledata.get(start_index).getId().toString()};
                historyTableModel.addRow(row);
                start_index++;

            }

        }

    }

    private void createPaginationSegments() {

        total_segments = tabledata.size() / maximum_record_display_limit;

        if ((tabledata.size() % maximum_record_display_limit) != 0) {
            total_segments += 1;
        }

        segmentMap = new HashMap<Integer, Integer>();

        for (int s = 0; s < total_segments; s++) {

            int segment = s + 1;

            if (s == 0) {

                segmentMap.put(segment, 0);

            } else {

                int segmentStartIndex = ((segment - 1) * maximum_record_display_limit);
                segmentMap.put(segment, segmentStartIndex);
                
            }

        }

        isPaginationInitialized = true;

    }

    private void configurePaginationButtons() {

        //setting previous segment
        if (current_segment != 1) {
            previous_segment = current_segment - 1;
            btn_search_pgnation_prev.setVisible(true);
        } else {
            previous_segment = null;
            btn_search_pgnation_prev.setVisible(false);
        }

        //setting next segment
        if (current_segment != total_segments) {
            next_segment = current_segment + 1;
            btn_search_pgnation_next.setVisible(true);
        } else {
            next_segment = null;
            btn_search_pgnation_next.setVisible(false);
        }

        //first pagination button
        btn_search_pgnation_one.setVisible(true);
        if (current_segment <= 3) {
            btn_pgn_one_segment = 1;
            btn_search_pgnation_one.setText(btn_pgn_one_segment.toString());
        } else {
            btn_pgn_one_segment = current_segment - 2;
            btn_search_pgnation_one.setText(btn_pgn_one_segment.toString());
        }

        //second pagination button
        btn_search_pgnation_two.setVisible(true);
        if (current_segment <= 3) {

            btn_pgn_two_segment = 2;
            btn_search_pgnation_two.setText(btn_pgn_two_segment.toString());

        } else {

            btn_pgn_two_segment = current_segment - 1;
            btn_search_pgnation_two.setText(btn_pgn_two_segment.toString());

        }

        if (total_segments >= 3) {

            btn_search_pgnation_three.setVisible(true);

            if (current_segment <= 3) {

                btn_pgn_three_segment = 3;
                btn_search_pgnation_three.setText(btn_pgn_three_segment.toString());

            } else {

                btn_pgn_three_segment = current_segment;
                btn_search_pgnation_three.setText(btn_pgn_three_segment.toString());

            }

        } else {

            btn_search_pgnation_three.setVisible(false);

        }

        //setting button positions
        if (!btn_search_pgnation_next.isVisible() && btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(90, 5);
            btn_search_pgnation_one.setLocation(170, 5);
            btn_search_pgnation_two.setLocation(220, 5);
            btn_search_pgnation_three.setLocation(270, 5);

        } else if (btn_search_pgnation_next.isVisible() && btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(10, 5);
            btn_search_pgnation_one.setLocation(90, 5);
            btn_search_pgnation_two.setLocation(140, 5);
            btn_search_pgnation_three.setLocation(190, 5);
            btn_search_pgnation_next.setLocation(240, 5);

        } else if (!btn_search_pgnation_next.isVisible() && !btn_search_pgnation_three.isVisible()) {

            btn_search_pgnation_prev.setLocation(140, 5);
            btn_search_pgnation_one.setLocation(220, 5);
            btn_search_pgnation_two.setLocation(270, 5);

        } else {

            btn_search_pgnation_one.setLocation(140, 5);
            btn_search_pgnation_two.setLocation(190, 5);
            btn_search_pgnation_next.setLocation(240, 5);

        }

        //setting selected button
        if ((current_segment == 1) || (current_segment == btn_pgn_one_segment)) {
            btn_search_pgnation_one.setSelected(true);
            btn_search_pgnation_two.setSelected(false);
            btn_search_pgnation_three.setSelected(false);
        } else if ((current_segment == 2) || (current_segment == btn_pgn_two_segment)) {
            btn_search_pgnation_one.setSelected(false);
            btn_search_pgnation_two.setSelected(true);
            btn_search_pgnation_three.setSelected(false);
        } else if ((current_segment == 3) || (current_segment == btn_pgn_three_segment)) {
            btn_search_pgnation_one.setSelected(false);
            btn_search_pgnation_two.setSelected(false);
            btn_search_pgnation_three.setSelected(true);
        }

    }

    private void hidePaginationButtons() {

        btn_search_pgnation_prev.setVisible(false);
        btn_search_pgnation_one.setVisible(false);
        btn_search_pgnation_two.setVisible(false);
        btn_search_pgnation_three.setVisible(false);
        btn_search_pgnation_next.setVisible(false);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Backup_history_table;
    public static javax.swing.JPanel advance_search_content_panel;
    private javax.swing.JButton btn_advanced_search;
    private javax.swing.JButton btn_reset_search;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_search_pgnation_next;
    private javax.swing.JButton btn_search_pgnation_one;
    private javax.swing.JButton btn_search_pgnation_prev;
    private javax.swing.JButton btn_search_pgnation_three;
    private javax.swing.JButton btn_search_pgnation_two;
    private javax.swing.JToggleButton btn_tgl_expand_search;
    private javax.swing.JToggleButton btn_tgl_specific_search;
    private javax.swing.JCheckBox chk_srch_handicap_amputant;
    private javax.swing.JCheckBox chk_srch_handicap_deaf;
    private javax.swing.JCheckBox chk_srch_handicap_mute;
    private javax.swing.JCheckBox chk_srch_handicap_others;
    private javax.swing.JCheckBox chk_srch_handicap_speech;
    private javax.swing.JCheckBox chk_srch_handicap_visual;
    public javax.swing.JComboBox cmb_education;
    public javax.swing.JComboBox cmb_nid_issue_division;
    private javax.swing.JComboBox cmb_perm_add_district;
    public javax.swing.JComboBox cmb_perm_add_division;
    private javax.swing.JComboBox cmb_perm_add_upozila;
    private javax.swing.JComboBox cmb_present_add_district;
    public javax.swing.JComboBox cmb_present_add_division;
    private javax.swing.JComboBox cmb_present_add_upo;
    public javax.swing.JComboBox cmb_religion;
    private javax.swing.JComboBox cmb_search_rpp;
    private javax.swing.JPanel default_search_panel;
    private static javax.swing.JPanel expanded_search_panel;
    static javax.swing.JTextField inp_certificate_no;
    public com.toedter.calendar.JDateChooser inp_date_of_birth;
    static javax.swing.JTextField inp_driving_license;
    static javax.swing.JTextField inp_email;
    static javax.swing.JTextField inp_mobile;
    public com.toedter.calendar.JDateChooser inp_nid_issue_date;
    static javax.swing.JTextField inp_passport;
    static javax.swing.JTextField inp_perm_village;
    private javax.swing.JTextField inp_pres_village;
    public static javax.swing.JTextField inp_search_bar;
    private javax.swing.JTextField inp_srch_fname_bng;
    private javax.swing.JTextField inp_srch_fname_eng;
    private javax.swing.JTextField inp_srch_fname_father;
    private javax.swing.JTextField inp_srch_fname_grandfather;
    private javax.swing.JTextField inp_srch_fname_mother;
    private javax.swing.JTextField inp_srch_fname_spouse;
    private javax.swing.JTextField inp_srch_lname_bng;
    private javax.swing.JTextField inp_srch_lname_eng;
    private javax.swing.JTextField inp_srch_lname_father;
    private javax.swing.JTextField inp_srch_lname_grandfather;
    private javax.swing.JTextField inp_srch_lname_mother;
    private javax.swing.JTextField inp_srch_lname_spouse;
    private javax.swing.JTextField inp_srch_mname_bng;
    private javax.swing.JTextField inp_srch_mname_eng;
    private javax.swing.JTextField inp_srch_mname_father;
    private javax.swing.JTextField inp_srch_mname_grandfather;
    private javax.swing.JTextField inp_srch_mname_mother;
    private javax.swing.JTextField inp_srch_mname_spouse;
    static javax.swing.JTextField inp_telephone;
    static javax.swing.JTextField inp_tin_no;
    private javax.swing.JLabel lbl_certi_issue_dist;
    private javax.swing.JLabel lbl_certificate_issue_date;
    private javax.swing.JLabel lbl_certificate_no;
    private javax.swing.JLabel lbl_citizenship_header;
    private javax.swing.JLabel lbl_contact;
    private javax.swing.JLabel lbl_date_of_birth;
    private javax.swing.JLabel lbl_edu_lang;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_hadicap_header;
    private javax.swing.JLabel lbl_misc_header;
    private javax.swing.JLabel lbl_name_bn;
    private javax.swing.JLabel lbl_name_en;
    private javax.swing.JLabel lbl_name_father;
    private javax.swing.JLabel lbl_name_grandfather;
    private javax.swing.JLabel lbl_name_mother;
    private javax.swing.JLabel lbl_name_spouse;
    private javax.swing.JLabel lbl_perm_add_header;
    private javax.swing.JLabel lbl_perm_village;
    private javax.swing.JLabel lbl_personal_details_header;
    private javax.swing.JLabel lbl_place_of_birth;
    private javax.swing.JLabel lbl_pres_village;
    private javax.swing.JLabel lbl_rpp;
    private javax.swing.JLabel lbl_search_total_records;
    private javax.swing.JPanel panel_search_pagination;
    private javax.swing.JRadioButton rdo_edu_stat_illiterate;
    private javax.swing.JRadioButton rdo_edu_stat_literate;
    private javax.swing.JRadioButton rdo_search_gender_female;
    private javax.swing.JRadioButton rdo_search_gender_male;
    private javax.swing.JRadioButton rdo_search_gender_third_gender;
    private javax.swing.JScrollPane scr_pane_search_panel_records;
    private javax.swing.JScrollPane scr_pane_specific_search;
    private javax.swing.JPanel search_content_panel;
    private javax.swing.JSeparator separator_address;
    private javax.swing.JSeparator separator_citizenship;
    private javax.swing.JSeparator separator_expand;
    private javax.swing.JSeparator separator_handicap;
    private javax.swing.JSeparator separator_misc;
    private javax.swing.JSeparator separator_personal_dtls;
    private static javax.swing.JPanel specific_search_base_panel;
    private javax.swing.JPanel specific_search_btn_panel;
    private javax.swing.ButtonGroup srchEduButtonGroup;
    private javax.swing.ButtonGroup srchGenderButtonGroup;
    // End of variables declaration//GEN-END:variables

    public static void viewDetails(String details_id) {
//        JOptionPane.showMessageDialog(null,details_id, "INFO", JOptionPane.INFORMATION_MESSAGE);

        //ApplicationNidPanel anp=new ApplicationNidPanel();
        ContainerJFrame.container.applicationNidPanel1.viewDetails(details_id);
        //anp.viewDetails(details_id);
//        ApplicationNidPanel.viewDetails(details_id);
        
    }

    private void initializeSearchView() {

        advance_search_content_panel.setSize(new Dimension(1000, 350));
        specific_search_btn_panel.setBounds(2, 313, 996, 35);
        scr_pane_specific_search.setBounds(2, 2, 996, 310);
        specific_search_base_panel.setPreferredSize(new Dimension(996, 310));
        expanded_search_panel.setVisible(false);

        btn_tgl_expand_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/down_rsz.png"))); // NOI18N
        btn_tgl_expand_search.setText("More");

        setPlaceHolder();

    }

    private void setPlaceHolder() {

        String first_name = "First Name";
        String middle_name = "Middle Name";
        String last_name = "Last Name";

        PromptSupport.setPrompt(first_name, inp_srch_fname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_bng);

        PromptSupport.setPrompt(first_name, inp_srch_fname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_eng);

        PromptSupport.setPrompt(first_name, inp_srch_fname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_spouse);

        PromptSupport.setPrompt(first_name, inp_srch_fname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_mother);

        PromptSupport.setPrompt(first_name, inp_srch_fname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_father);

        PromptSupport.setPrompt(first_name, inp_srch_fname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_fname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_fname_grandfather);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_bng);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_eng);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_spouse);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_mother);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_father);

        PromptSupport.setPrompt(middle_name, inp_srch_mname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_mname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_mname_grandfather);

        PromptSupport.setPrompt(last_name, inp_srch_lname_bng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_bng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_bng);

        PromptSupport.setPrompt(last_name, inp_srch_lname_eng);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_eng);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_eng);

        PromptSupport.setPrompt(last_name, inp_srch_lname_spouse);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_spouse);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_spouse);

        PromptSupport.setPrompt(last_name, inp_srch_lname_mother);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_mother);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_mother);

        PromptSupport.setPrompt(last_name, inp_srch_lname_father);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_father);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_father);

        PromptSupport.setPrompt(last_name, inp_srch_lname_grandfather);
        PromptSupport.setForeground(Color.GRAY, inp_srch_lname_grandfather);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_srch_lname_grandfather);

        PromptSupport.setPrompt("Telephone", inp_telephone);
        PromptSupport.setForeground(Color.GRAY, inp_telephone);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_telephone);

        PromptSupport.setPrompt("Mobile", inp_mobile);
        PromptSupport.setForeground(Color.GRAY, inp_mobile);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_mobile);

        PromptSupport.setPrompt("Email", inp_email);
        PromptSupport.setForeground(Color.GRAY, inp_email);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_email);

        PromptSupport.setPrompt("Driving License", inp_driving_license);
        PromptSupport.setForeground(Color.GRAY, inp_driving_license);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_driving_license);

        PromptSupport.setPrompt("TIN", inp_tin_no);
        PromptSupport.setForeground(Color.GRAY, inp_tin_no);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_tin_no);

        PromptSupport.setPrompt("Passport", inp_passport);
        PromptSupport.setForeground(Color.GRAY, inp_passport);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, inp_passport);

    }

    private void resetSearchPanel() {

        inp_certificate_no.setText("");
        inp_date_of_birth.setCalendar(null);
        inp_driving_license.setText("");
        inp_email.setText("");
        inp_mobile.setText("");
        inp_nid_issue_date.setCalendar(null);
        inp_passport.setText("");
//        inp_search_bar.setText("");
        inp_srch_fname_bng.setText("");
        inp_srch_fname_eng.setText("");
        inp_srch_fname_father.setText("");
        inp_srch_fname_grandfather.setText("");
        inp_srch_fname_mother.setText("");
        inp_srch_fname_spouse.setText("");
        inp_srch_lname_bng.setText("");
        inp_srch_lname_eng.setText("");
        inp_srch_lname_father.setText("");
        inp_srch_lname_grandfather.setText("");
        inp_srch_lname_mother.setText("");
        inp_srch_lname_spouse.setText("");
        inp_srch_mname_bng.setText("");
        inp_srch_mname_eng.setText("");
        inp_srch_mname_father.setText("");
        inp_srch_mname_grandfather.setText("");
        inp_srch_mname_mother.setText("");
        inp_srch_mname_spouse.setText("");
        inp_telephone.setText("");;
        inp_tin_no.setText("");
        inp_perm_village.setText("");
        inp_pres_village.setText(""); //this is for citizenship village/street

        cmb_education.setSelectedIndex(0);
        cmb_nid_issue_division.setSelectedIndex(0);
        cmb_perm_add_division.setSelectedIndex(0);
        cmb_present_add_division.setSelectedIndex(0);
        cmb_present_add_upo.setSelectedIndex(0);
        cmb_religion.setSelectedIndex(0);

        srchGenderButtonGroup.clearSelection();

        srchEduButtonGroup.clearSelection();

        chk_srch_handicap_amputant.setSelected(false);
        chk_srch_handicap_deaf.setSelected(false);
        chk_srch_handicap_mute.setSelected(false);
        chk_srch_handicap_others.setSelected(false);
        chk_srch_handicap_speech.setSelected(false);
        chk_srch_handicap_visual.setSelected(false);

    }

    private void setDefaultRpp() {

        cmb_search_rpp.addItem(new Item<String>("5", "5"));
        cmb_search_rpp.addItem(new Item<String>("10", "10"));
        cmb_search_rpp.addItem(new Item<String>("15", "15"));
        cmb_search_rpp.addItem(new Item<String>("20", "20"));
        cmb_search_rpp.addItem(new Item<String>("25", "25"));
        cmb_search_rpp.addItem(new Item<String>("50", "50"));
        cmb_search_rpp.addItem(new Item<String>("100", "100"));
        
        cmb_search_rpp.setSelectedIndex(1); // default 10 records per page

    }
}
