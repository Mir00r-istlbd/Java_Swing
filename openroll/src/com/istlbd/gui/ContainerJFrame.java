/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istlbd.gui;

import business.bean.Utils;
import business.entity.Item;
import client.bean.ApplicationData;
import client.bean.UserSession;
import static com.istlbd.utils.Lookup.BLOOD_GRP_LIST;
import static com.istlbd.utils.Lookup.DISTRICT_LIST;
import static com.istlbd.utils.Lookup.DIVISION_LIST;
import static com.istlbd.utils.Lookup.EDUCATION_LIST;
import static com.istlbd.utils.Lookup.MARITAL_STATUS_LIST;
import static com.istlbd.utils.Lookup.PROFESSION_LIST;
import static com.istlbd.utils.Lookup.RELIGION_LIST;
import static com.istlbd.utils.Lookup.RMO_LIST;
import static com.istlbd.utils.Lookup.ROLE_LIST;
import static com.istlbd.utils.Lookup.VOTER_AT_LIST;
import com.istlbd.utils.Defs;
import com.istlbd.utils.Lookup;
import database.bean.AddressEntityManagerBean; 
import database.bean.RoleEntityManagerBean;
import database.entity.District;
import database.entity.Division;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.io.File;
import javax.swing.JFrame;

/**
 *
 * @author Maverick
 */
public class ContainerJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ContainerJFrame
     */
    UserSession userSession = LoginPanel.getUserSession();
    public static ContainerJFrame container = null;

    public ContainerJFrame() {
        initComponents();
        mni_search_app.setVisible(false);

        try {
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File(getClass().getResource("/com/perp/fonts/Bangla_arial.ttf").toURI())));
            Font banglaFont = Font.createFont(Font.TRUETYPE_FONT, new File(getClass().getResource("/com/perp/fonts/Bangla_arial.ttf").toURI())).deriveFont(11f);

        } catch (Exception ex) {
        }
        container = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel1 = new image.ImagePanel();
        loginPanel = new javax.swing.JPanel();
        loginPanel1 = new com.istlbd.gui.LoginPanel();
        dashboardPanel = new javax.swing.JPanel();
        dashboard_quicklink_nid_registration_button = new javax.swing.JButton();
        dashboard_quicklink_app_button = new javax.swing.JButton();
        dashboard_quicklink_search_button = new javax.swing.JButton();
        dashboard_quicklink_role_search = new javax.swing.JButton();
        dashboard_quicklink_user_search = new javax.swing.JButton();
        searchPanel = new javax.swing.JPanel();
        searchPanel1 = new com.istlbd.gui.SearchPanel();
        nidRegistrationPanel = new javax.swing.JPanel();
        nidRegistrationPanel1 = new com.istlbd.gui.NidRegistrationPanel();
        enrPanel = new javax.swing.JPanel();
        applicationNidPanel1 = new com.istlbd.gui.ApplicationNidPanel();
        userSearchPanel = new javax.swing.JPanel();
        userSearchPanel1 = new com.istlbd.gui.UserSearchPanel();
        rolePanel = new javax.swing.JPanel();
        roleSearchPanel1 = new com.istlbd.gui.RoleSearchPanel();
        offline = new javax.swing.JPanel();
        offLineApplicationNidPanel1 = new com.istlbd.gui.OffLineApplicationNidPanel();
        biometricPanel = new javax.swing.JPanel();
        dummyNidPanel1 = new com.istlbd.gui.BiometricNidPanel();
        MenuBarVar = new javax.swing.JMenuBar();
        dashboardMenu = new javax.swing.JMenu();
        registrationMenu = new javax.swing.JMenu();
        mni_application = new javax.swing.JMenuItem();
        mni_nid_registration = new javax.swing.JMenuItem();
        searchMenu = new javax.swing.JMenu();
        mni_search_app = new javax.swing.JMenuItem();
        mni_search_user = new javax.swing.JMenuItem();
        mni_search_role = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Enrollment Kit");
        setMinimumSize(new java.awt.Dimension(1350, 700));
        setName("baseFrame"); // NOI18N
        setResizable(false);

        imagePanel1.setMaximumSize(new java.awt.Dimension(1350, 700));
        imagePanel1.setMinimumSize(new java.awt.Dimension(1350, 700));
        imagePanel1.setPreferredSize(new java.awt.Dimension(1350, 700));
        imagePanel1.setLayout(new java.awt.CardLayout());

        loginPanel.setBackground(new Color(0,0,0,0));
        loginPanel.setMaximumSize(new java.awt.Dimension(1350, 700));
        loginPanel.setMinimumSize(new java.awt.Dimension(1350, 700));
        loginPanel.setOpaque(false);
        loginPanel.setLayout(null);
        loginPanel.add(loginPanel1);
        loginPanel1.setBounds(0, 0, 1350, 700);

        imagePanel1.add(loginPanel, "login");

        dashboardPanel.setBackground(new Color(0,0,0,0));
        dashboardPanel.setMaximumSize(new java.awt.Dimension(1350, 690));
        dashboardPanel.setMinimumSize(new java.awt.Dimension(1350, 690));
        dashboardPanel.setOpaque(false);
        dashboardPanel.setPreferredSize(new java.awt.Dimension(1350, 690));

        dashboard_quicklink_nid_registration_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/nidRegistrationQuicklink.png"))); // NOI18N
        dashboard_quicklink_nid_registration_button.setToolTipText("Registration (NID)");
        dashboard_quicklink_nid_registration_button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        dashboard_quicklink_nid_registration_button.setBorderPainted(false);
        dashboard_quicklink_nid_registration_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard_quicklink_nid_registration_button.setIconTextGap(15);
        dashboard_quicklink_nid_registration_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dashboard_quicklink_nid_registration_button.setPreferredSize(new java.awt.Dimension(187, 127));
        dashboard_quicklink_nid_registration_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard_quicklink_nid_registration_buttonMouseClicked(evt);
            }
        });

        dashboard_quicklink_app_button.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dashboard_quicklink_app_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/online.png"))); // NOI18N
        dashboard_quicklink_app_button.setToolTipText("Registration");
        dashboard_quicklink_app_button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        dashboard_quicklink_app_button.setBorderPainted(false);
        dashboard_quicklink_app_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard_quicklink_app_button.setIconTextGap(15);
        dashboard_quicklink_app_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dashboard_quicklink_app_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard_quicklink_app_buttonMouseClicked(evt);
            }
        });
        dashboard_quicklink_app_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboard_quicklink_app_buttonActionPerformed(evt);
            }
        });

        dashboard_quicklink_search_button.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dashboard_quicklink_search_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/offline.png"))); // NOI18N
        dashboard_quicklink_search_button.setToolTipText("Search");
        dashboard_quicklink_search_button.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        dashboard_quicklink_search_button.setBorderPainted(false);
        dashboard_quicklink_search_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard_quicklink_search_button.setIconTextGap(15);
        dashboard_quicklink_search_button.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dashboard_quicklink_search_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard_quicklink_search_buttonMouseClicked(evt);
            }
        });

        dashboard_quicklink_role_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/role.png"))); // NOI18N
        dashboard_quicklink_role_search.setToolTipText("Role");
        dashboard_quicklink_role_search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        dashboard_quicklink_role_search.setBorderPainted(false);
        dashboard_quicklink_role_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard_quicklink_role_search.setIconTextGap(15);
        dashboard_quicklink_role_search.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dashboard_quicklink_role_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard_quicklink_role_searchMouseClicked(evt);
            }
        });

        dashboard_quicklink_user_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/identity.png"))); // NOI18N
        dashboard_quicklink_user_search.setToolTipText("Identity");
        dashboard_quicklink_user_search.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        dashboard_quicklink_user_search.setBorderPainted(false);
        dashboard_quicklink_user_search.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboard_quicklink_user_search.setIconTextGap(15);
        dashboard_quicklink_user_search.setMargin(new java.awt.Insets(0, 0, 0, 0));
        dashboard_quicklink_user_search.setPreferredSize(new java.awt.Dimension(187, 127));
        dashboard_quicklink_user_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboard_quicklink_user_searchMouseClicked(evt);
            }
        });
        dashboard_quicklink_user_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboard_quicklink_user_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(385, 385, 385)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(dashboard_quicklink_user_search, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dashboard_quicklink_role_search, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(dashboard_quicklink_nid_registration_button, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dashboard_quicklink_app_button, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dashboard_quicklink_search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(396, Short.MAX_VALUE))
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dashboard_quicklink_nid_registration_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dashboard_quicklink_app_button, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dashboard_quicklink_search_button, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dashboard_quicklink_user_search, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dashboard_quicklink_role_search, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(274, Short.MAX_VALUE))
        );

        imagePanel1.add(dashboardPanel, "dashboard");

        searchPanel.setMaximumSize(new java.awt.Dimension(1350, 700));
        searchPanel.setMinimumSize(new java.awt.Dimension(1350, 700));
        searchPanel.setOpaque(false);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(searchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        imagePanel1.add(searchPanel, "searchCard");

        nidRegistrationPanel.setBackground(new Color(0,0,0,0));
        nidRegistrationPanel.setOpaque(false);
        nidRegistrationPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                nidRegistrationPanelComponentShown(evt);
            }
        });

        javax.swing.GroupLayout nidRegistrationPanelLayout = new javax.swing.GroupLayout(nidRegistrationPanel);
        nidRegistrationPanel.setLayout(nidRegistrationPanelLayout);
        nidRegistrationPanelLayout.setHorizontalGroup(
            nidRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nidRegistrationPanelLayout.createSequentialGroup()
                .addComponent(nidRegistrationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        nidRegistrationPanelLayout.setVerticalGroup(
            nidRegistrationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nidRegistrationPanelLayout.createSequentialGroup()
                .addComponent(nidRegistrationPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 50, Short.MAX_VALUE))
        );

        imagePanel1.add(nidRegistrationPanel, "register");

        enrPanel.setMaximumSize(new java.awt.Dimension(1350, 700));
        enrPanel.setMinimumSize(new java.awt.Dimension(1350, 700));
        enrPanel.setOpaque(false);
        enrPanel.setPreferredSize(new java.awt.Dimension(1350, 680));

        applicationNidPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                applicationNidPanel1ComponentShown(evt);
            }
        });

        javax.swing.GroupLayout enrPanelLayout = new javax.swing.GroupLayout(enrPanel);
        enrPanel.setLayout(enrPanelLayout);
        enrPanelLayout.setHorizontalGroup(
            enrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enrPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(applicationNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        enrPanelLayout.setVerticalGroup(
            enrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enrPanelLayout.createSequentialGroup()
                .addComponent(applicationNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(686, 686, 686))
        );

        imagePanel1.add(enrPanel, "app");

        userSearchPanel.setOpaque(false);

        javax.swing.GroupLayout userSearchPanelLayout = new javax.swing.GroupLayout(userSearchPanel);
        userSearchPanel.setLayout(userSearchPanelLayout);
        userSearchPanelLayout.setHorizontalGroup(
            userSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userSearchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        userSearchPanelLayout.setVerticalGroup(
            userSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userSearchPanelLayout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(userSearchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        imagePanel1.add(userSearchPanel, "userSearch");

        rolePanel.setOpaque(false);

        javax.swing.GroupLayout rolePanelLayout = new javax.swing.GroupLayout(rolePanel);
        rolePanel.setLayout(rolePanelLayout);
        rolePanelLayout.setHorizontalGroup(
            rolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rolePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(roleSearchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        rolePanelLayout.setVerticalGroup(
            rolePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rolePanelLayout.createSequentialGroup()
                .addComponent(roleSearchPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        imagePanel1.add(rolePanel, "roleCard");

        javax.swing.GroupLayout offlineLayout = new javax.swing.GroupLayout(offline);
        offline.setLayout(offlineLayout);
        offlineLayout.setHorizontalGroup(
            offlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(offlineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(offLineApplicationNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        offlineLayout.setVerticalGroup(
            offlineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(offlineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(offLineApplicationNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        imagePanel1.add(offline, "offLine");

        javax.swing.GroupLayout biometricPanelLayout = new javax.swing.GroupLayout(biometricPanel);
        biometricPanel.setLayout(biometricPanelLayout);
        biometricPanelLayout.setHorizontalGroup(
            biometricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(biometricPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dummyNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        biometricPanelLayout.setVerticalGroup(
            biometricPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(biometricPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dummyNidPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        imagePanel1.add(biometricPanel, "biometric");

        MenuBarVar.setBackground(new java.awt.Color(204, 204, 204));
        MenuBarVar.setForeground(new java.awt.Color(255, 255, 255));
        MenuBarVar.setPreferredSize(new java.awt.Dimension(253, 35));
        MenuBarVar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MenuBarVarPropertyChange(evt);
            }
        });

        dashboardMenu.setText("     Dashboard");
        dashboardMenu.setToolTipText("");
        dashboardMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboardMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dashboardMenu.setMaximumSize(new java.awt.Dimension(100, 20));
        dashboardMenu.setMinimumSize(new java.awt.Dimension(100, 20));
        dashboardMenu.setPreferredSize(new java.awt.Dimension(100, 20));
        dashboardMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMenuMouseClicked(evt);
            }
        });
        MenuBarVar.add(dashboardMenu);

        registrationMenu.setText("    Registration");
        registrationMenu.setToolTipText("");
        registrationMenu.setActionCommand("");
        registrationMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        registrationMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        registrationMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        registrationMenu.setIconTextGap(5);
        registrationMenu.setMaximumSize(new java.awt.Dimension(100, 20));
        registrationMenu.setMinimumSize(new java.awt.Dimension(100, 20));
        registrationMenu.setPreferredSize(new java.awt.Dimension(100, 20));

        mni_application.setText("Application");
        mni_application.setToolTipText("Registration");
        mni_application.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mni_applicationMouseClicked(evt);
            }
        });
        mni_application.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_applicationActionPerformed(evt);
            }
        });
        registrationMenu.add(mni_application);

        mni_nid_registration.setText("Registration (NID)");
        mni_nid_registration.setToolTipText("Registration (NID)");
        mni_nid_registration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_nid_registrationActionPerformed(evt);
            }
        });
        registrationMenu.add(mni_nid_registration);

        MenuBarVar.add(registrationMenu);

        searchMenu.setText("         Search");
        searchMenu.setToolTipText("");
        searchMenu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchMenu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchMenu.setMaximumSize(new java.awt.Dimension(100, 20));
        searchMenu.setMinimumSize(new java.awt.Dimension(100, 20));
        searchMenu.setPreferredSize(new java.awt.Dimension(100, 20));

        mni_search_app.setText("Application");
        mni_search_app.setToolTipText("Search");
        mni_search_app.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_search_appActionPerformed(evt);
            }
        });
        searchMenu.add(mni_search_app);

        mni_search_user.setText("User");
        mni_search_user.setToolTipText("Identity");
        mni_search_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_search_userActionPerformed(evt);
            }
        });
        searchMenu.add(mni_search_user);

        mni_search_role.setText("Roles");
        mni_search_role.setToolTipText("Role");
        mni_search_role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mni_search_roleActionPerformed(evt);
            }
        });
        searchMenu.add(mni_search_role);

        MenuBarVar.add(searchMenu);

        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
        });
        MenuBarVar.add(logout);

        setJMenuBar(MenuBarVar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(imagePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuBarVarPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MenuBarVarPropertyChange
    }//GEN-LAST:event_MenuBarVarPropertyChange

    private void dashboardMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMenuMouseClicked

        showDashboard();

    }//GEN-LAST:event_dashboardMenuMouseClicked

    private void dashboard_quicklink_app_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard_quicklink_app_buttonMouseClicked

        if (this.dashboard_quicklink_app_button.isEnabled()) {
            //showApplication();
            showOnLineNidRegistration();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }

    }//GEN-LAST:event_dashboard_quicklink_app_buttonMouseClicked

    private void dashboard_quicklink_search_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard_quicklink_search_buttonMouseClicked

        if (this.dashboard_quicklink_search_button.isEnabled()) {
            //showSearch();
            showOffLineNidRegistration();
            
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_dashboard_quicklink_search_buttonMouseClicked

    private void dashboard_quicklink_nid_registration_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard_quicklink_nid_registration_buttonMouseClicked
        if (this.dashboard_quicklink_nid_registration_button.isEnabled()) {
            showNidRegistration();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_dashboard_quicklink_nid_registration_buttonMouseClicked

    private void nidRegistrationPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_nidRegistrationPanelComponentShown
        nidRegistrationPanel1.scanCardReaderDevice();
    }//GEN-LAST:event_nidRegistrationPanelComponentShown

    private void dashboard_quicklink_role_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard_quicklink_role_searchMouseClicked
        if (this.dashboard_quicklink_role_search.isEnabled()) {
            showRoleSearch();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_dashboard_quicklink_role_searchMouseClicked

    private void dashboard_quicklink_user_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboard_quicklink_user_searchMouseClicked

        if (this.dashboard_quicklink_user_search.isEnabled()) {
            showUserSearch();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_dashboard_quicklink_user_searchMouseClicked

    private void mni_applicationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mni_applicationMouseClicked
    }//GEN-LAST:event_mni_applicationMouseClicked

    private void mni_applicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_applicationActionPerformed

        if (this.mni_application.isEnabled()) {
            //showApplication();
            showOffLineNidRegistration();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_mni_applicationActionPerformed

    private void mni_search_roleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_search_roleActionPerformed

        if (this.mni_search_role.isEnabled()) {
            showRoleSearch();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_mni_search_roleActionPerformed

    private void mni_nid_registrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_nid_registrationActionPerformed

        if (this.mni_nid_registration.isEnabled()) {
            showNidRegistration();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_mni_nid_registrationActionPerformed

    private void mni_search_appActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_search_appActionPerformed

        if (this.mni_search_app.isEnabled()) {
            showSearch();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_mni_search_appActionPerformed

    private void mni_search_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mni_search_userActionPerformed

        if (this.mni_search_user.isEnabled()) {
            showUserSearch();
        } else {
            Utils.showErrorMsg("You don't have sufficient permission to access this option");
        }
    }//GEN-LAST:event_mni_search_userActionPerformed

    private void applicationNidPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_applicationNidPanel1ComponentShown
    }//GEN-LAST:event_applicationNidPanel1ComponentShown

    private void dashboard_quicklink_app_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboard_quicklink_app_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboard_quicklink_app_buttonActionPerformed

    private void dashboard_quicklink_user_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboard_quicklink_user_searchActionPerformed
        // TODO add your handling code here:
//        if (this.dashboard_quicklink_user_search.isEnabled()) {
//            showIdentity();
//        } else {
//            Utils.showErrorMsg("You don't have sufficient permission to access this option");
//        }
    }//GEN-LAST:event_dashboard_quicklink_user_searchActionPerformed

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
        //userSession = null;
        showLoginPanel();
    }//GEN-LAST:event_logoutMouseClicked

    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContainerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContainerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContainerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContainerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                ContainerJFrame containerJFrame = new ContainerJFrame();

                AddressEntityManagerBean aem = new AddressEntityManagerBean();
                DIVISION_LIST = aem.findDivisionEntities();
                DISTRICT_LIST = aem.findDistrictEntities();

                RoleEntityManagerBean rmb = new RoleEntityManagerBean();
                ROLE_LIST = rmb.findRoleEntities();

                containerJFrame.searchPanel1.inp_nid_issue_date.setDateFormatString(Defs.dateFormString);
                containerJFrame.searchPanel1.inp_date_of_birth.setDateFormatString(Defs.dateFormString);
                containerJFrame.searchPanel1.cmb_nid_issue_division.addItem(new Item<String>("", "Division"));
                containerJFrame.searchPanel1.cmb_present_add_division.addItem(new Item<String>("", "Division"));
                containerJFrame.searchPanel1.cmb_perm_add_division.addItem(new Item<String>("", "Division"));

                containerJFrame.applicationNidPanel1.cmb_birth_place_district.addItem(new Item<String>("", "District"));
                containerJFrame.applicationNidPanel1.cmb_present_division.addItem(new Item<String>("", "Division"));
                containerJFrame.applicationNidPanel1.cmb_permanent_division.addItem(new Item<String>("", "Division"));

                for (Division dv : Lookup.DIVISION_LIST) {

                    containerJFrame.applicationNidPanel1.cmb_present_division.addItem(new Item<String>(dv.getId(), dv.getNameEn()));
                    containerJFrame.applicationNidPanel1.cmb_permanent_division.addItem(new Item<String>(dv.getId(), dv.getNameEn()));
                    containerJFrame.searchPanel1.cmb_nid_issue_division.addItem(new Item<String>(dv.getId(), dv.getNameEn()));
                    containerJFrame.searchPanel1.cmb_present_add_division.addItem(new Item<String>(dv.getId(), dv.getNameEn()));
                    containerJFrame.searchPanel1.cmb_perm_add_division.addItem(new Item<String>(dv.getId(), dv.getNameEn()));

                }

                for (District ds : Lookup.DISTRICT_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_birth_place_district.addItem(new Item<String>(ds.getId(), ds.getNameEn()));
                }

                for (Item it : EDUCATION_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_education.addItem(it);
                    containerJFrame.searchPanel1.cmb_education.addItem(it);
                }

                for (Item it : PROFESSION_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_profession.addItem(it);
//                    containerJFrame.searchPanel1.cmb_education.addItem(it);
                }

                for (Item it : RELIGION_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_religion.addItem(it);
                    containerJFrame.searchPanel1.cmb_religion.addItem(it);
                }

                for (Item it : MARITAL_STATUS_LIST) {
                    applicationNidPanel1.cmb_marital_status.addItem(it);
                }

                for (Item it : BLOOD_GRP_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_blood_grp.addItem(it);
                }

                for (Item it : VOTER_AT_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_voter_at.addItem(it);
                }

                for (Item it : RMO_LIST) {
                    containerJFrame.applicationNidPanel1.cmb_present_rmo.addItem(it);
                    containerJFrame.applicationNidPanel1.cmb_permanent_rmo.addItem(it);
                }

//                applicationData = new ApplicationData();
                card = (CardLayout) imagePanel1.getLayout();
                containerJFrame.setVisible(true);
                containerJFrame.setLocationRelativeTo(null);
                MenuBarVar.setVisible(false);
                containerJFrame.getRootPane().setDefaultButton(containerJFrame.loginPanel1.btn_login);

                containerJFrame.applicationNidPanel1.cmb_present_division.setSelectedIndex(0);
                containerJFrame.applicationNidPanel1.cmb_permanent_division.setSelectedIndex(0);

            }
        });
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JMenuBar MenuBarVar;
    public static com.istlbd.gui.ApplicationNidPanel applicationNidPanel1;
    public static javax.swing.JPanel biometricPanel;
    public static javax.swing.JMenu dashboardMenu;
    public javax.swing.JPanel dashboardPanel;
    public static javax.swing.JButton dashboard_quicklink_app_button;
    public static javax.swing.JButton dashboard_quicklink_nid_registration_button;
    public static javax.swing.JButton dashboard_quicklink_role_search;
    public static javax.swing.JButton dashboard_quicklink_search_button;
    public static javax.swing.JButton dashboard_quicklink_user_search;
    public static com.istlbd.gui.BiometricNidPanel dummyNidPanel1;
    private javax.swing.JPanel enrPanel;
    public static image.ImagePanel imagePanel1;
    public static javax.swing.JPanel loginPanel;
    public static com.istlbd.gui.LoginPanel loginPanel1;
    private javax.swing.JMenu logout;
    public static javax.swing.JMenuItem mni_application;
    public static javax.swing.JMenuItem mni_nid_registration;
    public static javax.swing.JMenuItem mni_search_app;
    public static javax.swing.JMenuItem mni_search_role;
    public static javax.swing.JMenuItem mni_search_user;
    public static javax.swing.JPanel nidRegistrationPanel;
    private com.istlbd.gui.NidRegistrationPanel nidRegistrationPanel1;
    private com.istlbd.gui.OffLineApplicationNidPanel offLineApplicationNidPanel1;
    public static javax.swing.JPanel offline;
    public static javax.swing.JMenu registrationMenu;
    private javax.swing.JPanel rolePanel;
    private com.istlbd.gui.RoleSearchPanel roleSearchPanel1;
    public static javax.swing.JMenu searchMenu;
    public static javax.swing.JPanel searchPanel;
    public static com.istlbd.gui.SearchPanel searchPanel1;
    private javax.swing.JPanel userSearchPanel;
    private com.istlbd.gui.UserSearchPanel userSearchPanel1;
    // End of variables declaration//GEN-END:variables
    public static CardLayout card = null;

    public void showApplication() {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "app");
        applicationNidPanel1.resetEnrollmentApplication();
        MenuBarVar.setFocusable(true);


    }

    public static void showDashboard() {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "dashboard");
    }

    public static void showSearch() {
        searchPanel1.advance_search_content_panel.setVisible(false);
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "searchCard");

    }

    public static void showIdentity() {
        searchPanel1.advance_search_content_panel.setVisible(false);
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "searchCard");
    }

    public static void showNidRegistration() {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "register");
    }

    public static void showUserSearch() {

        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "userSearch");

    }

    public static void showRoleSearch() {

        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "roleCard");

    }

    public void showLoginPanel() {
        //dashboardPanel.removeAll();
        
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "login");
        MenuBarVar.setVisible(false);

        //container.dispose();    
        //container.dashboardPanel.setVisible(false);
        //setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //container.imagePanel1.disable();
        
    }
    
    public static void showOffLineNidRegistration() {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "offLine");
    }
    
        public static void showOnLineNidRegistration() {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "offLine");
    }
    
    public static void showBiomatricPanel(String detailsId) {
        CardLayout card1 = (CardLayout) imagePanel1.getLayout();
        card1.show(imagePanel1, "biometric");
        ContainerJFrame.container.dummyNidPanel1.viewDetails(detailsId  );
    }
}
