/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.istlbd.gui;

import com.istlbd.utils.Lookup;
import com.istlbd.scanner.wrapper.TwainScannerJFrame;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Maverick
 */
public class Scanner extends javax.swing.JFrame {
    //Citizenship, Transfer, Marriage, Utility, Other
    public static String TYPE_CITIZENSHIP="Citizenship";
    public static String TYPE_TRANSFER="Transfer";
    public static String TYPE_MARRIAGE="Marriage";
    public static String TYPE_UTILITY="Utility";
    public static String TYPE_OTHER="Other";

    public static ImageIcon iconside1=null;
    public static ImageIcon iconside2=null;    
    

    TwainScannerJFrame tj;
    /**
     * Creates new form Scanner
     */
    public Scanner() {
        initComponents();

        tj = new TwainScannerJFrame();
        tj.init();
        tj.start();            
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cmb_attachment_type = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        scannedJLabelSide1 = new javax.swing.JLabel();
        side1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        scannedJLabelSide2 = new javax.swing.JLabel();
        side2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        cmb_attachment_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Citizenship", "Transfer", "Marriage", "Utility", "Other" }));
        cmb_attachment_type.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_attachment_typeItemStateChanged(evt);
            }
        });
        cmb_attachment_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_attachment_typeActionPerformed(evt);
            }
        });

        jLabel1.setLabelFor(cmb_attachment_type);
        jLabel1.setText("Attachment Type");

        jPanel2.setMaximumSize(new java.awt.Dimension(742, 300));
        jPanel2.setMinimumSize(new java.awt.Dimension(742, 300));
        jPanel2.setPreferredSize(new java.awt.Dimension(742, 300));

        scannedJLabelSide1.setBackground(new java.awt.Color(0, 0, 0));
        scannedJLabelSide1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        scannedJLabelSide1.setOpaque(true);

        side1.setText("Capture");
        side1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                side1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scannedJLabelSide1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addComponent(side1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scannedJLabelSide1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(side1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Side 1", jPanel2);

        scannedJLabelSide2.setBackground(new java.awt.Color(0, 0, 0));
        scannedJLabelSide2.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));
        scannedJLabelSide2.setOpaque(true);

        side2.setText("Capture");
        side2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                side2ActionPerformed(evt);
            }
        });

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scannedJLabelSide2, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(side2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scannedJLabelSide2, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(side2)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Side 2", jPanel3);

        jLabel2.setBackground(new java.awt.Color(0, 51, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/menu.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmb_attachment_type, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_attachment_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void side1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_side1ActionPerformed
        // TODO add your handling code here:
        
        String devStr="CanoScan LiDE 110";

        try {
            tj.startCapture(true);
        } catch (Throwable ex) {
            Logger.getLogger(TwainScannerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }        
        
        
    }//GEN-LAST:event_side1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void side2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_side2ActionPerformed
        // TODO add your handling code here:
        
        String devStr="CanoScan LiDE 110";

        try {
            tj.startCapture(false);
        } catch (Throwable ex) {
            Logger.getLogger(TwainScannerJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }          
    }//GEN-LAST:event_side2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmb_attachment_typeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_attachment_typeItemStateChanged
        
        
            Thread t = new Thread(new Runnable() {
               public void run() {

                  onTypeChange();
                  SwingUtilities.invokeLater(new Runnable() {
                      public void run() {
                          // update the ui here
                      }
                  });
               }
            });
            t.start();
    }//GEN-LAST:event_cmb_attachment_typeItemStateChanged

    private void cmb_attachment_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_attachment_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_attachment_typeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scanner().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JComboBox cmb_attachment_type;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JLabel scannedJLabelSide1;
    public static javax.swing.JLabel scannedJLabelSide2;
    private javax.swing.JButton side1;
    private javax.swing.JButton side2;
    // End of variables declaration//GEN-END:variables

private void loadAttachments(byte[] rawData1,byte[] rawData2,JLabel frame1,JLabel frame2)
{
        try{
            if(rawData1==null)
            {
                frame1.setIcon(null);    
            }
            else{
            InputStream in1 = new ByteArrayInputStream(rawData1);
            BufferedImage bImageFromConvert1 = ImageIO.read(in1);
            ImageIcon iic1=new ImageIcon(bImageFromConvert1.getScaledInstance(frame1.getWidth(),frame1.getHeight(),java.awt.Image.SCALE_DEFAULT));            
            frame1.setIcon(iic1);
            }
        }
        catch(Exception ex){}
        try{
            if(rawData2==null)
            {
                frame2.setIcon(null);
                
            }
            else{
            InputStream in2 = new ByteArrayInputStream(rawData2);
            BufferedImage bImageFromConvert2 = ImageIO.read(in2);
            ImageIcon iic2=new ImageIcon(bImageFromConvert2.getScaledInstance(frame2.getWidth(),frame2.getHeight(),java.awt.Image.SCALE_DEFAULT));
            frame2.setIcon(iic2);
            }
        }
        catch(Exception ex){}
}

    public void onTypeChange() {
        // TODO add your handling code here:
        
        InputStream in;
        BufferedImage bImageFromConvert;

        
        
        if(Scanner.cmb_attachment_type.getSelectedItem().toString().equalsIgnoreCase(Scanner.TYPE_CITIZENSHIP))
        {
            loadAttachments(ApplicationNidPanel.applicationData.getCitizenshipAttachment1(),ApplicationNidPanel.applicationData.getCitizenshipAttachment2(),scannedJLabelSide1,scannedJLabelSide2);
        }
        else if(Scanner.cmb_attachment_type.getSelectedItem().toString().equalsIgnoreCase(Scanner.TYPE_MARRIAGE))
        {
           loadAttachments(ApplicationNidPanel.applicationData.getMarriageAttachment1(),ApplicationNidPanel.applicationData.getMarriageAttachment2(),scannedJLabelSide1,scannedJLabelSide2);
        }
        else if(Scanner.cmb_attachment_type.getSelectedItem().toString().equalsIgnoreCase(Scanner.TYPE_TRANSFER))
        {
            loadAttachments(ApplicationNidPanel.applicationData.getTransferAttachment1(),ApplicationNidPanel.applicationData.getTransferAttachment2(),scannedJLabelSide1,scannedJLabelSide2);
        }
        else if(Scanner.cmb_attachment_type.getSelectedItem().toString().equalsIgnoreCase(Scanner.TYPE_UTILITY))
        {
            loadAttachments(ApplicationNidPanel.applicationData.getUtilityAttachment1(),ApplicationNidPanel.applicationData.getUtilityAttachment2(),scannedJLabelSide1,scannedJLabelSide2);
        }
        else if(Scanner.cmb_attachment_type.getSelectedItem().toString().equalsIgnoreCase(Scanner.TYPE_OTHER))
        {
            loadAttachments(ApplicationNidPanel.applicationData.getOtherAttachment1(),ApplicationNidPanel.applicationData.getOtherAttachment2(),scannedJLabelSide1,scannedJLabelSide2);
        }
    }

}
